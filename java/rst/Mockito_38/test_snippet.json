[
    [
        {
            "class_name": "org.mockito.internal.verification.argumentmatching.ArgumentMatchingToolTest",
            "child_classes": [],
            "src_path": "test/org/mockito/internal/verification/argumentmatching/ArgumentMatchingToolTest.java",
            "signature": "org.mockito.internal.verification.argumentmatching.ArgumentMatchingToolTest.shouldNotFindAnySuspiciousMatchersWhenNumberOfArgumentsDoesntMatch()",
            "snippet": "public void shouldNotFindAnySuspiciousMatchersWhenNumberOfArgumentsDoesntMatch() {\n//given",
            "begin_line": 23,
            "end_line": 24,
            "comment": "/*\n * Copyright (c) 2007 Mockito contributors\n * This program is made available under the terms of the MIT License.\n ",
            "child_ranges": []
        },
        {
            "class_name": "org.mockito.internal.verification.argumentmatching.ArgumentMatchingToolTest",
            "child_classes": [],
            "src_path": "test/org/mockito/internal/verification/argumentmatching/ArgumentMatchingToolTest.java",
            "signature": "org.mockito.internal.verification.argumentmatching.ArgumentMatchingToolTest.shouldNotFindAnySuspiciousMatchersWhenArgumentsMatch()",
            "snippet": "public void shouldNotFindAnySuspiciousMatchersWhenArgumentsMatch() {\n//given",
            "begin_line": 35,
            "end_line": 36,
            "comment": "        then",
            "child_ranges": []
        },
        {
            "class_name": "org.mockito.internal.verification.argumentmatching.ArgumentMatchingToolTest",
            "child_classes": [],
            "src_path": "test/org/mockito/internal/verification/argumentmatching/ArgumentMatchingToolTest.java",
            "signature": "org.mockito.internal.verification.argumentmatching.ArgumentMatchingToolTest.shouldFindSuspiciousMatchers()",
            "snippet": "public void shouldFindSuspiciousMatchers() {\n//given",
            "begin_line": 47,
            "end_line": 48,
            "comment": "        then",
            "child_ranges": []
        },
        {
            "class_name": "org.mockito.internal.verification.argumentmatching.ArgumentMatchingToolTest",
            "child_classes": [],
            "src_path": "test/org/mockito/internal/verification/argumentmatching/ArgumentMatchingToolTest.java",
            "signature": "org.mockito.internal.verification.argumentmatching.ArgumentMatchingToolTest.shouldNotFindSuspiciousMatchersWhenTypesAreTheSame()",
            "snippet": "public void shouldNotFindSuspiciousMatchersWhenTypesAreTheSame() {\n//given",
            "begin_line": 62,
            "end_line": 63,
            "comment": "        then",
            "child_ranges": []
        },
        {
            "class_name": "org.mockito.internal.verification.argumentmatching.ArgumentMatchingToolTest",
            "child_classes": [],
            "src_path": "test/org/mockito/internal/verification/argumentmatching/ArgumentMatchingToolTest.java",
            "signature": "org.mockito.internal.verification.argumentmatching.ArgumentMatchingToolTest.describeTo(Description desc)",
            "snippet": "public void describeTo(Description desc) {\n//let's pretend we have the same description as the toString() of the argument",
            "begin_line": 65,
            "end_line": 66,
            "comment": "        given",
            "child_ranges": []
        },
        {
            "class_name": "org.mockito.internal.verification.argumentmatching.ArgumentMatchingToolTest",
            "child_classes": [],
            "src_path": "test/org/mockito/internal/verification/argumentmatching/ArgumentMatchingToolTest.java",
            "signature": "org.mockito.internal.verification.argumentmatching.ArgumentMatchingToolTest.shouldWorkFineWhenGivenArgIsNull()",
            "snippet": "public void shouldWorkFineWhenGivenArgIsNull() {\n//when",
            "begin_line": 80,
            "end_line": 81,
            "comment": "        then",
            "child_ranges": []
        },
        {
            "class_name": "org.mockito.internal.verification.argumentmatching.ArgumentMatchingToolTest",
            "child_classes": [],
            "src_path": "test/org/mockito/internal/verification/argumentmatching/ArgumentMatchingToolTest.java",
            "signature": "org.mockito.internal.verification.argumentmatching.ArgumentMatchingToolTest.shouldUseMatchersSafely()",
            "snippet": "public void shouldUseMatchersSafely() {\n//given",
            "begin_line": 89,
            "end_line": 90,
            "comment": "        then",
            "child_ranges": []
        },
        {
            "class_name": "org.mockito.internal.verification.argumentmatching.ArgumentMatchingToolTest",
            "child_classes": [],
            "src_path": "test/org/mockito/internal/verification/argumentmatching/ArgumentMatchingToolTest.java",
            "signature": "org.mockito.internal.verification.argumentmatching.ArgumentMatchingToolTest.matches(Object item)",
            "snippet": "public boolean matches(Object item) {\nthrow new ClassCastException(\"nasty matcher\");\n}",
            "begin_line": 92,
            "end_line": 94,
            "comment": "        given",
            "child_ranges": [
                "(line 93,col 17)-(line 93,col 62)"
            ]
        },
        {
            "class_name": "org.mockito.internal.verification.argumentmatching.ArgumentMatchingToolTest",
            "child_classes": [],
            "src_path": "test/org/mockito/internal/verification/argumentmatching/ArgumentMatchingToolTest.java",
            "signature": "org.mockito.internal.verification.argumentmatching.ArgumentMatchingToolTest.describeTo(Description description)",
            "snippet": "public void describeTo(Description description) {\n}});\n\n//when",
            "begin_line": 96,
            "end_line": 99,
            "comment": "        given",
            "child_ranges": [
                "(line 97,col 13)-(line 97,col 16)",
                "(line 98,col 0)-(line 98,col 8)"
            ]
        }
    ],
    [
        {
            "class_name": "org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest",
            "child_classes": [],
            "src_path": "test/org/mockitousage/bugs/ActualInvocationHasNullArgumentNPEBugTest.java",
            "signature": "org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest.shouldAllowPassingNullArgument()",
            "snippet": "public void shouldAllowPassingNullArgument() {\n//given",
            "begin_line": 20,
            "end_line": 21,
            "comment": "/*\n * Copyright (c) 2007 Mockito contributors\n * This program is made available under the terms of the MIT License.\n ",
            "child_ranges": []
        }
    ]
]