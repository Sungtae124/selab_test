[
  {
    "class_name": "Matchers",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/Matchers.java",
    "signature": "Matchers.mockingProgress",
    "snippet": "private static MockingProgress mockingProgress\u003dnew ThreadSafeMockingProgress();",
    "begin_line": 104,
    "end_line": 104,
    "comment": ""
  },
  {
    "class_name": "Mockito",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/Mockito.java",
    "signature": "Mockito.MOCKITO_CORE",
    "snippet": "private static final MockitoCore MOCKITO_CORE\u003dnew MockitoCore();",
    "begin_line": 570,
    "end_line": 570,
    "comment": ""
  },
  {
    "class_name": "Mockito",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/Mockito.java",
    "signature": "Mockito.RETURNS_DEFAULTS",
    "snippet": "public static final Answer\u003cObject\u003e RETURNS_DEFAULTS\u003dnew GloballyConfiguredAnswer();",
    "begin_line": 581,
    "end_line": 581,
    "comment": "/** \n * The default Answer of every mock \u003cb\u003eif\u003c/b\u003e the mock was not stubbed.  Typically it just returns some empty value.  \u003cp\u003e {@link Answer} can be used to define the return values of unstubbed invocations. \u003cp\u003e This implementation first tries the global configuration.  If there is no global configuration then it uses  {@link ReturnsEmptyValues} (returns zeros, empty collections, nulls, etc.)\n */\n"
  },
  {
    "class_name": "Mockito",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/Mockito.java",
    "signature": "Mockito.RETURNS_SMART_NULLS",
    "snippet": "public static final Answer\u003cObject\u003e RETURNS_SMART_NULLS\u003dnew ReturnsSmartNulls();",
    "begin_line": 613,
    "end_line": 613,
    "comment": "/** \n * Optional Answer to be used with  {@link Mockito#mock(Class,Answer)}\u003cp\u003e {@link Answer} can be used to define the return values of unstubbed invocations.\u003cp\u003e This implementation can be helpful when working with legacy code. Unstubbed methods often return null. If your code uses the object returned by an unstubbed call you get a NullPointerException. This implementation of Answer \u003cb\u003ereturns SmartNull instead of null\u003c/b\u003e. SmartNull gives nicer exception message than NPE because it points out the line where unstubbed method was called. You just click on the stack trace. \u003cp\u003e ReturnsSmartNulls first tries to return ordinary return values (see  {@link ReturnsMoreEmptyValues}) then it tries to return SmartNull. If the return type is final then plain null is returned. \u003cp\u003e ReturnsSmartNulls will be probably the default return values strategy in Mockito 2.0 \u003cp\u003e Example: \u003cpre\u003e Foo mock \u003d (Foo.class, RETURNS_SMART_NULLS); //calling unstubbed method here: Stuff stuff \u003d mock.getStuff(); //using object returned by unstubbed call: stuff.doSomething(); //Above doesn\u0027t yield NullPointerException this time! //Instead, SmartNullPointerException is thrown.  //Exception\u0027s cause links to unstubbed \u003ci\u003emock.getStuff()\u003c/i\u003e - just click on the stack trace.   \u003c/pre\u003e\n */\n"
  },
  {
    "class_name": "Mockito",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/Mockito.java",
    "signature": "Mockito.RETURNS_MOCKS",
    "snippet": "public static final Answer\u003cObject\u003e RETURNS_MOCKS\u003dnew ReturnsMocks();",
    "begin_line": 626,
    "end_line": 626,
    "comment": "/** \n * Optional Answer to be used with  {@link Mockito#mock(Class,Answer)}\u003cp\u003e {@link Answer} can be used to define the return values of unstubbed invocations.\u003cp\u003e This implementation can be helpful when working with legacy code.  \u003cp\u003e ReturnsMocks first tries to return ordinary return values (see  {@link ReturnsMoreEmptyValues}) then it tries to return mocks. If the return type cannot be mocked (e.g. is final) then plain null is returned. \u003cp\u003e\n */\n"
  },
  {
    "class_name": "Mockito",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/Mockito.java",
    "signature": "Mockito.CALLS_REAL_METHODS",
    "snippet": "public static final Answer\u003cObject\u003e CALLS_REAL_METHODS\u003dnew CallsRealMethods();",
    "begin_line": 660,
    "end_line": 660,
    "comment": "/** \n * Optional Answer to be used with  {@link Mockito#mock(Class,Answer)}\u003cp\u003e {@link Answer} can be used to define the return values of unstubbed invocations.\u003cp\u003e This implementation can be helpful when working with legacy code. When this implementation is used, unstubbed methods will delegate to the real implementation. This is a way to create a partial mock object that calls real methods by default. \u003cp\u003e As usual you are going to read \u003cb\u003ethe partial mock warning\u003c/b\u003e: Object oriented programming is more less tackling complexity by dividing the complexity into separate, specific, SRPy objects. How does partial mock fit into this paradigm? Well, it just doesn\u0027t...  Partial mock usually means that the complexity has been moved to a different method on the same object. In most cases, this is not the way you want to design your application. \u003cp\u003e However, there are rare cases when partial mocks come handy:  dealing with code you cannot change easily (3rd party interfaces, interim refactoring of legacy code etc.) However, I wouldn\u0027t use partial mocks for new, test-driven \u0026 well-designed code. \u003cp\u003e Example: \u003cpre\u003e Foo mock \u003d mock(Foo.class, CALLS_REAL_METHODS); // this calls the real implementation of Foo.getSomething() value \u003d mock.getSomething(); when(mock.getSomething()).thenReturn(fakeValue); // now fakeValue is returned value \u003d mock.getSomething(); \u003c/pre\u003e\n */\n"
  },
  {
    "class_name": "MockHandler",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/MockHandler.java",
    "signature": "MockHandler.registeredInvocations",
    "snippet": "private final RegisteredInvocations registeredInvocations;",
    "begin_line": 37,
    "end_line": 37,
    "comment": ""
  },
  {
    "class_name": "MockHandler",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/MockHandler.java",
    "signature": "MockHandler.mockitoStubber",
    "snippet": "private final MockitoStubber mockitoStubber;",
    "begin_line": 38,
    "end_line": 38,
    "comment": ""
  },
  {
    "class_name": "MockHandler",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/MockHandler.java",
    "signature": "MockHandler.matchersBinder",
    "snippet": "private final MatchersBinder matchersBinder;",
    "begin_line": 39,
    "end_line": 39,
    "comment": ""
  },
  {
    "class_name": "MockHandler",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/MockHandler.java",
    "signature": "MockHandler.mockingProgress",
    "snippet": "private final MockingProgress mockingProgress;",
    "begin_line": 40,
    "end_line": 40,
    "comment": ""
  },
  {
    "class_name": "MockHandler",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/MockHandler.java",
    "signature": "MockHandler.mockName",
    "snippet": "private final MockName mockName;",
    "begin_line": 41,
    "end_line": 41,
    "comment": ""
  },
  {
    "class_name": "MockHandler",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/MockHandler.java",
    "signature": "MockHandler.mockSettings",
    "snippet": "private final MockSettingsImpl mockSettings;",
    "begin_line": 42,
    "end_line": 42,
    "comment": ""
  },
  {
    "class_name": "MockitoCore",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/MockitoCore.java",
    "signature": "MockitoCore.reporter",
    "snippet": "private final Reporter reporter\u003dnew Reporter();",
    "begin_line": 32,
    "end_line": 32,
    "comment": ""
  },
  {
    "class_name": "MockitoCore",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/MockitoCore.java",
    "signature": "MockitoCore.mockUtil",
    "snippet": "private final MockUtil mockUtil\u003dnew MockUtil();",
    "begin_line": 33,
    "end_line": 33,
    "comment": ""
  },
  {
    "class_name": "MockitoCore",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/MockitoCore.java",
    "signature": "MockitoCore.mockingProgress",
    "snippet": "private final MockingProgress mockingProgress\u003dnew ThreadSafeMockingProgress();",
    "begin_line": 34,
    "end_line": 34,
    "comment": ""
  },
  {
    "class_name": "GlobalConfiguration",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/configuration/GlobalConfiguration.java",
    "signature": "GlobalConfiguration.globalConfiguration",
    "snippet": "private static ThreadLocal\u003cIMockitoConfiguration\u003e globalConfiguration\u003dnew ThreadLocal\u003cIMockitoConfiguration\u003e();",
    "begin_line": 19,
    "end_line": 19,
    "comment": ""
  },
  {
    "class_name": "MethodInterceptorFilter",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/creation/MethodInterceptorFilter.java",
    "signature": "MethodInterceptorFilter.equalsMethod",
    "snippet": "private final Method equalsMethod;",
    "begin_line": 16,
    "end_line": 16,
    "comment": ""
  },
  {
    "class_name": "MethodInterceptorFilter",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/creation/MethodInterceptorFilter.java",
    "signature": "MethodInterceptorFilter.hashCodeMethod",
    "snippet": "private final Method hashCodeMethod;",
    "begin_line": 17,
    "end_line": 17,
    "comment": ""
  },
  {
    "class_name": "MethodInterceptorFilter",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/creation/MethodInterceptorFilter.java",
    "signature": "MethodInterceptorFilter.delegate",
    "snippet": "private final T delegate;",
    "begin_line": 19,
    "end_line": 19,
    "comment": ""
  },
  {
    "class_name": "MockSettingsImpl",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/creation/MockSettingsImpl.java",
    "signature": "MockSettingsImpl.extraInterfaces",
    "snippet": "private Class\u003c?\u003e[] extraInterfaces;",
    "begin_line": 13,
    "end_line": 13,
    "comment": ""
  },
  {
    "class_name": "MockSettingsImpl",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/creation/MockSettingsImpl.java",
    "signature": "MockSettingsImpl.name",
    "snippet": "private String name;",
    "begin_line": 14,
    "end_line": 14,
    "comment": ""
  },
  {
    "class_name": "MockSettingsImpl",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/creation/MockSettingsImpl.java",
    "signature": "MockSettingsImpl.spiedInstance",
    "snippet": "private Object spiedInstance;",
    "begin_line": 15,
    "end_line": 15,
    "comment": ""
  },
  {
    "class_name": "MockSettingsImpl",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/creation/MockSettingsImpl.java",
    "signature": "MockSettingsImpl.defaultAnswer",
    "snippet": "private Answer\u003cObject\u003e defaultAnswer;",
    "begin_line": 16,
    "end_line": 16,
    "comment": ""
  },
  {
    "class_name": "MockitoNamingPolicy",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/creation/cglib/MockitoNamingPolicy.java",
    "signature": "MockitoNamingPolicy.INSTANCE",
    "snippet": "public static final MockitoNamingPolicy INSTANCE\u003dnew MockitoNamingPolicy();",
    "begin_line": 11,
    "end_line": 11,
    "comment": ""
  },
  {
    "class_name": "ClassImposterizer",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/creation/jmock/ClassImposterizer.java",
    "signature": "ClassImposterizer.INSTANCE",
    "snippet": "public static final ClassImposterizer INSTANCE\u003dnew ClassImposterizer();",
    "begin_line": 30,
    "end_line": 30,
    "comment": ""
  },
  {
    "class_name": "ClassImposterizer",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/creation/jmock/ClassImposterizer.java",
    "signature": "ClassImposterizer.objenesis",
    "snippet": "private ObjenesisStd objenesis\u003dnew ObjenesisStd();",
    "begin_line": 37,
    "end_line": 37,
    "comment": ""
  },
  {
    "class_name": "ClassImposterizer",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/creation/jmock/ClassImposterizer.java",
    "signature": "ClassImposterizer.NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES",
    "snippet": "private static final NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES\u003dnew MockitoNamingPolicy(){\n  @Override public String getClassName(  String prefix,  String source,  Object key,  Predicate names){\n    return \"codegen.\" + super.getClassName(prefix,source,key,names);\n  }\n}\n;",
    "begin_line": 39,
    "end_line": 44,
    "comment": ""
  },
  {
    "class_name": "ClassImposterizer",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/creation/jmock/ClassImposterizer.java",
    "signature": "ClassImposterizer.IGNORE_BRIDGE_METHODS",
    "snippet": "private static final CallbackFilter IGNORE_BRIDGE_METHODS\u003dnew CallbackFilter(){\n  public int accept(  Method method){\n    return method.isBridge() ? 1 : 0;\n  }\n}\n;",
    "begin_line": 45,
    "end_line": 50,
    "comment": ""
  },
  {
    "class_name": "DebuggingInfo",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/debugging/DebuggingInfo.java",
    "signature": "DebuggingInfo.unusedStubs",
    "snippet": "private final List\u003cInvocation\u003e unusedStubs\u003dnew LinkedList\u003cInvocation\u003e();",
    "begin_line": 17,
    "end_line": 17,
    "comment": ""
  },
  {
    "class_name": "DebuggingInfo",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/debugging/DebuggingInfo.java",
    "signature": "DebuggingInfo.unstubbedInvocations",
    "snippet": "private final List\u003cInvocationMatcher\u003e unstubbedInvocations\u003dnew LinkedList\u003cInvocationMatcher\u003e();",
    "begin_line": 18,
    "end_line": 18,
    "comment": ""
  },
  {
    "class_name": "DebuggingInfo",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/debugging/DebuggingInfo.java",
    "signature": "DebuggingInfo.collectingData",
    "snippet": "private boolean collectingData;",
    "begin_line": 20,
    "end_line": 20,
    "comment": ""
  },
  {
    "class_name": "Equals",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/matchers/Equals.java",
    "signature": "Equals.wanted",
    "snippet": "private final Object wanted;",
    "begin_line": 13,
    "end_line": 13,
    "comment": ""
  },
  {
    "class_name": "ArgumentMatcherStorageImpl",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/progress/ArgumentMatcherStorageImpl.java",
    "signature": "ArgumentMatcherStorageImpl.matcherStack",
    "snippet": "private Stack\u003cLocalizedMatcher\u003e matcherStack\u003dnew Stack\u003cLocalizedMatcher\u003e();",
    "begin_line": 24,
    "end_line": 24,
    "comment": ""
  },
  {
    "class_name": "MockingProgressImpl",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/progress/MockingProgressImpl.java",
    "signature": "MockingProgressImpl.reporter",
    "snippet": "private final Reporter reporter\u003dnew Reporter();",
    "begin_line": 18,
    "end_line": 18,
    "comment": ""
  },
  {
    "class_name": "MockingProgressImpl",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/progress/MockingProgressImpl.java",
    "signature": "MockingProgressImpl.argumentMatcherStorage",
    "snippet": "private final ArgumentMatcherStorage argumentMatcherStorage\u003dnew ArgumentMatcherStorageImpl();",
    "begin_line": 19,
    "end_line": 19,
    "comment": ""
  },
  {
    "class_name": "MockingProgressImpl",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/progress/MockingProgressImpl.java",
    "signature": "MockingProgressImpl.debuggingInfo",
    "snippet": "private final DebuggingInfo debuggingInfo\u003dnew DebuggingInfo();",
    "begin_line": 21,
    "end_line": 21,
    "comment": ""
  },
  {
    "class_name": "MockingProgressImpl",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/progress/MockingProgressImpl.java",
    "signature": "MockingProgressImpl.iOngoingStubbing",
    "snippet": "IOngoingStubbing iOngoingStubbing;",
    "begin_line": 23,
    "end_line": 23,
    "comment": ""
  },
  {
    "class_name": "MockingProgressImpl",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/progress/MockingProgressImpl.java",
    "signature": "MockingProgressImpl.verificationMode",
    "snippet": "private Localized\u003cVerificationMode\u003e verificationMode;",
    "begin_line": 24,
    "end_line": 24,
    "comment": ""
  },
  {
    "class_name": "MockingProgressImpl",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/progress/MockingProgressImpl.java",
    "signature": "MockingProgressImpl.stubbingInProgress",
    "snippet": "private Location stubbingInProgress\u003dnull;",
    "begin_line": 25,
    "end_line": 25,
    "comment": ""
  },
  {
    "class_name": "ThreadSafeMockingProgress",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/progress/ThreadSafeMockingProgress.java",
    "signature": "ThreadSafeMockingProgress.mockingProgress",
    "snippet": "private static ThreadLocal\u003cMockingProgress\u003e mockingProgress\u003dnew ThreadLocal\u003cMockingProgress\u003e();",
    "begin_line": 13,
    "end_line": 13,
    "comment": ""
  },
  {
    "class_name": "MockitoStubber",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/stubbing/MockitoStubber.java",
    "signature": "MockitoStubber.stubbed",
    "snippet": "private final LinkedList\u003cStubbedInvocationMatcher\u003e stubbed\u003dnew LinkedList\u003cStubbedInvocationMatcher\u003e();",
    "begin_line": 20,
    "end_line": 20,
    "comment": ""
  },
  {
    "class_name": "MockitoStubber",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/stubbing/MockitoStubber.java",
    "signature": "MockitoStubber.mockingProgress",
    "snippet": "private final MockingProgress mockingProgress;",
    "begin_line": 21,
    "end_line": 21,
    "comment": ""
  },
  {
    "class_name": "MockitoStubber",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/stubbing/MockitoStubber.java",
    "signature": "MockitoStubber.answersForStubbing",
    "snippet": "private final List\u003cAnswer\u003e answersForStubbing\u003dnew ArrayList\u003cAnswer\u003e();",
    "begin_line": 22,
    "end_line": 22,
    "comment": ""
  },
  {
    "class_name": "MockitoStubber",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/stubbing/MockitoStubber.java",
    "signature": "MockitoStubber.invocationForStubbing",
    "snippet": "private InvocationMatcher invocationForStubbing;",
    "begin_line": 24,
    "end_line": 24,
    "comment": ""
  },
  {
    "class_name": "ReturnsMocks",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/stubbing/defaultanswers/ReturnsMocks.java",
    "signature": "ReturnsMocks.mockitoCore",
    "snippet": "private MockitoCore mockitoCore\u003dnew MockitoCore();",
    "begin_line": 15,
    "end_line": 15,
    "comment": ""
  },
  {
    "class_name": "ReturnsMocks",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/stubbing/defaultanswers/ReturnsMocks.java",
    "signature": "ReturnsMocks.delegate",
    "snippet": "private Answer\u003cObject\u003e delegate\u003dnew ReturnsMoreEmptyValues();",
    "begin_line": 16,
    "end_line": 16,
    "comment": ""
  },
  {
    "class_name": "ReturnsMoreEmptyValues",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/stubbing/defaultanswers/ReturnsMoreEmptyValues.java",
    "signature": "ReturnsMoreEmptyValues.delegate",
    "snippet": "private Answer\u003cObject\u003e delegate\u003dnew ReturnsEmptyValues();",
    "begin_line": 45,
    "end_line": 45,
    "comment": ""
  },
  {
    "class_name": "ThrowingInterceptor",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNulls.java",
    "signature": "ThrowingInterceptor.invocation",
    "snippet": "private final InvocationOnMock invocation;",
    "begin_line": 40,
    "end_line": 40,
    "comment": ""
  },
  {
    "class_name": "ThrowingInterceptor",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNulls.java",
    "signature": "ThrowingInterceptor.location",
    "snippet": "private final Location location\u003dnew Location();",
    "begin_line": 41,
    "end_line": 41,
    "comment": ""
  },
  {
    "class_name": "ThrowingInterceptor",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNulls.java",
    "signature": "ThrowingInterceptor.delegate",
    "snippet": "private final Answer\u003cObject\u003e delegate\u003dnew ReturnsMoreEmptyValues();",
    "begin_line": 57,
    "end_line": 57,
    "comment": ""
  },
  {
    "class_name": "MockName",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/util/MockName.java",
    "signature": "MockName.mockName",
    "snippet": "private final String mockName;",
    "begin_line": 9,
    "end_line": 9,
    "comment": ""
  },
  {
    "class_name": "MockName",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/util/MockName.java",
    "signature": "MockName.surrogate",
    "snippet": "private boolean surrogate;",
    "begin_line": 10,
    "end_line": 10,
    "comment": ""
  },
  {
    "class_name": "MockUtil",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/util/MockUtil.java",
    "signature": "MockUtil.creationValidator",
    "snippet": "private final CreationValidator creationValidator;",
    "begin_line": 21,
    "end_line": 21,
    "comment": ""
  },
  {
    "class_name": "RegisteredInvocations",
    "src_path": "src/main/resources/Mockito-38/buggy/src/org/mockito/internal/verification/RegisteredInvocations.java",
    "signature": "RegisteredInvocations.invocations",
    "snippet": "private final List\u003cInvocation\u003e invocations\u003dCollections.synchronizedList(new LinkedList\u003cInvocation\u003e());",
    "begin_line": 18,
    "end_line": 18,
    "comment": ""
  }
]