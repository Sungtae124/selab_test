[
    [
        {
            "class_name": "org.apache.commons.lang3.ClassUtilsTest",
            "child_classes": [],
            "src_path": "src/test/java/org/apache/commons/lang3/ClassUtilsTest.java",
            "signature": "org.apache.commons.lang3.ClassUtilsTest.ClassUtilsTest(String name)",
            "snippet": "public ClassUtilsTest(String name) {\nsuper(name);\n}",
            "begin_line": 42,
            "end_line": 44,
            "comment": "\n * Unit tests {@link org.apache.commons.lang3.ClassUtils}.\n *\n * @author Apache Software Foundation\n * @author Gary D. Gregory\n * @author Tomasz Blachowicz\n * @version $Id$\n ",
            "child_ranges": [
                "(line 43,col 9)-(line 43,col 20)"
            ]
        },
        {
            "class_name": "org.apache.commons.lang3.ClassUtilsTest",
            "child_classes": [],
            "src_path": "src/test/java/org/apache/commons/lang3/ClassUtilsTest.java",
            "signature": "org.apache.commons.lang3.ClassUtilsTest.testConstructor()",
            "snippet": "public void testConstructor() {\nassertNotNull(new ClassUtils());\nConstructor<?>[] cons = ClassUtils.class.getDeclaredConstructors();\nassertEquals(1, cons.length);\nassertEquals(true, Modifier.isPublic(cons[0].getModifiers()));\nassertEquals(true, Modifier.isPublic(ClassUtils.class.getModifiers()));\nassertEquals(false, Modifier.isFinal(ClassUtils.class.getModifiers()));\n}",
            "begin_line": 50,
            "end_line": 57,
            "comment": "    -----------------------------------------------------------------------",
            "child_ranges": [
                "(line 51,col 9)-(line 51,col 40)",
                "(line 52,col 9)-(line 52,col 75)",
                "(line 53,col 9)-(line 53,col 37)",
                "(line 54,col 9)-(line 54,col 70)",
                "(line 55,col 9)-(line 55,col 79)",
                "(line 56,col 9)-(line 56,col 79)"
            ]
        },
        {
            "class_name": "org.apache.commons.lang3.ClassUtilsTest",
            "child_classes": [],
            "src_path": "src/test/java/org/apache/commons/lang3/ClassUtilsTest.java",
            "signature": "org.apache.commons.lang3.ClassUtilsTest.test_getShortClassName_Object()",
            "snippet": "public void test_getShortClassName_Object() {\nassertEquals(\"ClassUtils\", ClassUtils.getShortClassName(new ClassUtils(), \"<null>\"));\nassertEquals(\"ClassUtilsTest.Inner\", ClassUtils.getShortClassName(new Inner(), \"<null>\"));\nassertEquals(\"String\", ClassUtils.getShortClassName(\"hello\", \"<null>\"));\nassertEquals(\"<null>\", ClassUtils.getShortClassName(null, \"<null>\"));\n}",
            "begin_line": 60,
            "end_line": 65,
            "comment": "     -------------------------------------------------------------------------",
            "child_ranges": [
                "(line 61,col 9)-(line 61,col 93)",
                "(line 62,col 9)-(line 62,col 98)",
                "(line 63,col 9)-(line 63,col 80)",
                "(line 64,col 9)-(line 64,col 77)"
            ]
        },
        {
            "class_name": "org.apache.commons.lang3.ClassUtilsTest",
            "child_classes": [],
            "src_path": "src/test/java/org/apache/commons/lang3/ClassUtilsTest.java",
            "signature": "org.apache.commons.lang3.ClassUtilsTest.test_getShortClassName_Class()",
            "snippet": "public void test_getShortClassName_Class() {\nassertEquals(\"ClassUtils\", ClassUtils.getShortClassName(ClassUtils.class));\nassertEquals(\"Map.Entry\", ClassUtils.getShortClassName(Map.Entry.class));\nassertEquals(\"\", ClassUtils.getShortClassName((Class<?>) null));\n\n// LANG-535",
            "begin_line": 67,
            "end_line": 72,
            "comment": "     -------------------------------------------------------------------------",
            "child_ranges": [
                "(line 68,col 9)-(line 68,col 83)",
                "(line 69,col 9)-(line 69,col 81)",
                "(line 70,col 9)-(line 70,col 72)",
                "(line 71,col 0)-(line 71,col 0)"
            ]
        },
        {
            "class_name": "org.apache.commons.lang3.ClassUtilsTest",
            "child_classes": [],
            "src_path": "src/test/java/org/apache/commons/lang3/ClassUtilsTest.java",
            "signature": "org.apache.commons.lang3.ClassUtilsTest.test_getShortClassName_String()",
            "snippet": "public void test_getShortClassName_String() {\nassertEquals(\"ClassUtils\", ClassUtils.getShortClassName(ClassUtils.class.getName()));\nassertEquals(\"Map.Entry\", ClassUtils.getShortClassName(Map.Entry.class.getName()));\nassertEquals(\"\", ClassUtils.getShortClassName((String) null));\nassertEquals(\"\", ClassUtils.getShortClassName(\"\"));\n}",
            "begin_line": 102,
            "end_line": 107,
            "comment": "         Arrays of arrays of ...",
            "child_ranges": [
                "(line 103,col 9)-(line 103,col 93)",
                "(line 104,col 9)-(line 104,col 91)",
                "(line 105,col 9)-(line 105,col 70)",
                "(line 106,col 9)-(line 106,col 59)"
            ]
        },
        {
            "class_name": "org.apache.commons.lang3.ClassUtilsTest",
            "child_classes": [],
            "src_path": "src/test/java/org/apache/commons/lang3/ClassUtilsTest.java",
            "signature": "org.apache.commons.lang3.ClassUtilsTest.test_getPackageName_Object()",
            "snippet": "public void test_getPackageName_Object() {\nassertEquals(\"org.apache.commons.lang3\", ClassUtils.getPackageName(new ClassUtils(), \"<null>\"));\nassertEquals(\"org.apache.commons.lang3\", ClassUtils.getPackageName(new Inner(), \"<null>\"));\nassertEquals(\"<null>\", ClassUtils.getPackageName(null, \"<null>\"));\n}",
            "begin_line": 110,
            "end_line": 114,
            "comment": "     -------------------------------------------------------------------------",
            "child_ranges": [
                "(line 111,col 9)-(line 111,col 104)",
                "(line 112,col 9)-(line 112,col 99)",
                "(line 113,col 9)-(line 113,col 74)"
            ]
        },
        {
            "class_name": "org.apache.commons.lang3.ClassUtilsTest",
            "child_classes": [],
            "src_path": "src/test/java/org/apache/commons/lang3/ClassUtilsTest.java",
            "signature": "org.apache.commons.lang3.ClassUtilsTest.test_getPackageName_Class()",
            "snippet": "public void test_getPackageName_Class() {\nassertEquals(\"java.lang\", ClassUtils.getPackageName(String.class));\nassertEquals(\"java.util\", ClassUtils.getPackageName(Map.Entry.class));\nassertEquals(\"\", ClassUtils.getPackageName((Class<?>)null));\n\n// LANG-535",
            "begin_line": 116,
            "end_line": 121,
            "comment": "     -------------------------------------------------------------------------",
            "child_ranges": [
                "(line 117,col 9)-(line 117,col 75)",
                "(line 118,col 9)-(line 118,col 78)",
                "(line 119,col 9)-(line 119,col 68)",
                "(line 120,col 0)-(line 120,col 0)"
            ]
        },
        {
            "class_name": "org.apache.commons.lang3.ClassUtilsTest",
            "child_classes": [],
            "src_path": "src/test/java/org/apache/commons/lang3/ClassUtilsTest.java",
            "signature": "org.apache.commons.lang3.ClassUtilsTest.test_getPackageName_String()",
            "snippet": "public void test_getPackageName_String() {\nassertEquals(\"org.apache.commons.lang3\", ClassUtils.getPackageName(ClassUtils.class.getName()));\nassertEquals(\"java.util\", ClassUtils.getPackageName(Map.Entry.class.getName()));\nassertEquals(\"\", ClassUtils.getPackageName((String)null));\nassertEquals(\"\", ClassUtils.getPackageName(\"\"));\n}",
            "begin_line": 140,
            "end_line": 145,
            "comment": "         Arrays of arrays of ...",
            "child_ranges": [
                "(line 141,col 9)-(line 141,col 104)",
                "(line 142,col 9)-(line 142,col 88)",
                "(line 143,col 9)-(line 143,col 66)",
                "(line 144,col 9)-(line 144,col 56)"
            ]
        },
        {
            "class_name": "org.apache.commons.lang3.ClassUtilsTest",
            "child_classes": [],
            "src_path": "src/test/java/org/apache/commons/lang3/ClassUtilsTest.java",
            "signature": "org.apache.commons.lang3.ClassUtilsTest.test_getAllSuperclasses_Class()",
            "snippet": "public void test_getAllSuperclasses_Class() {\nList<?> list = ClassUtils.getAllSuperclasses(CY.class);\nassertEquals(2, list.size());\nassertEquals(CX.class, list.get(0));\nassertEquals(Object.class, list.get(1));\n\nassertEquals(null, ClassUtils.getAllSuperclasses(null));\n}",
            "begin_line": 148,
            "end_line": 155,
            "comment": "     -------------------------------------------------------------------------",
            "child_ranges": [
                "(line 149,col 9)-(line 149,col 63)",
                "(line 150,col 9)-(line 150,col 37)",
                "(line 151,col 9)-(line 151,col 44)",
                "(line 152,col 9)-(line 152,col 48)",
                "(line 153,col 0)-(line 153,col 0)",
                "(line 154,col 9)-(line 154,col 64)"
            ]
        },
        {
            "class_name": "org.apache.commons.lang3.ClassUtilsTest",
            "child_classes": [],
            "src_path": "src/test/java/org/apache/commons/lang3/ClassUtilsTest.java",
            "signature": "org.apache.commons.lang3.ClassUtilsTest.test_getAllInterfaces_Class()",
            "snippet": "public void test_getAllInterfaces_Class() {\nList<?> list = ClassUtils.getAllInterfaces(CY.class);\nassertEquals(6, list.size());\nassertEquals(IB.class, list.get(0));\nassertEquals(IC.class, list.get(1));\nassertEquals(ID.class, list.get(2));\nassertEquals(IE.class, list.get(3));\nassertEquals(IF.class, list.get(4));\nassertEquals(IA.class, list.get(5));\n\nassertEquals(null, ClassUtils.getAllInterfaces(null));\n}",
            "begin_line": 157,
            "end_line": 168,
            "comment": "     -------------------------------------------------------------------------",
            "child_ranges": [
                "(line 158,col 9)-(line 158,col 61)",
                "(line 159,col 9)-(line 159,col 37)",
                "(line 160,col 9)-(line 160,col 44)",
                "(line 161,col 9)-(line 161,col 44)",
                "(line 162,col 9)-(line 162,col 44)",
                "(line 163,col 9)-(line 163,col 44)",
                "(line 164,col 9)-(line 164,col 44)",
                "(line 165,col 9)-(line 165,col 44)",
                "(line 166,col 0)-(line 166,col 0)",
                "(line 167,col 9)-(line 167,col 62)"
            ]
        },
        {
            "class_name": "org.apache.commons.lang3.ClassUtilsTest",
            "child_classes": [],
            "src_path": "src/test/java/org/apache/commons/lang3/ClassUtilsTest.java",
            "signature": "org.apache.commons.lang3.ClassUtilsTest.test_convertClassNamesToClasses_List()",
            "snippet": "public void test_convertClassNamesToClasses_List() {\nList<String> list = new ArrayList<String>();\nList<Class<?>> result = ClassUtils.convertClassNamesToClasses(list);\nassertEquals(0, result.size());\n\nlist.add(\"java.lang.String\");\nlist.add(\"java.lang.xxx\");\nlist.add(\"java.lang.Object\");\nresult = ClassUtils.convertClassNamesToClasses(list);\nassertEquals(3, result.size());\nassertEquals(String.class, result.get(0));\nassertEquals(null, result.get(1));\nassertEquals(Object.class, result.get(2));\n\n@SuppressWarnings(\"unchecked\") // test what happens when non-gneric code adds wrong type of element",
            "begin_line": 188,
            "end_line": 202,
            "comment": "     -------------------------------------------------------------------------",
            "child_ranges": [
                "(line 189,col 9)-(line 189,col 52)",
                "(line 190,col 9)-(line 190,col 76)",
                "(line 191,col 9)-(line 191,col 39)",
                "(line 192,col 0)-(line 192,col 0)",
                "(line 193,col 9)-(line 193,col 37)",
                "(line 194,col 9)-(line 194,col 34)",
                "(line 195,col 9)-(line 195,col 37)",
                "(line 196,col 9)-(line 196,col 61)",
                "(line 197,col 9)-(line 197,col 39)",
                "(line 198,col 9)-(line 198,col 50)",
                "(line 199,col 9)-(line 199,col 42)",
                "(line 200,col 9)-(line 200,col 50)",
                "(line 201,col 0)-(line 201,col 0)"
            ]
        },
        {
            "class_name": "org.apache.commons.lang3.ClassUtilsTest",
            "child_classes": [],
            "src_path": "src/test/java/org/apache/commons/lang3/ClassUtilsTest.java",
            "signature": "org.apache.commons.lang3.ClassUtilsTest.test_convertClassesToClassNames_List()",
            "snippet": "public void test_convertClassesToClassNames_List() {\nList<Class<?>> list = new ArrayList<Class<?>>();\nList<String> result = ClassUtils.convertClassesToClassNames(list);\nassertEquals(0, result.size());\n\nlist.add(String.class);\nlist.add(null);\nlist.add(Object.class);\nresult = ClassUtils.convertClassesToClassNames(list);\nassertEquals(3, result.size());\nassertEquals(\"java.lang.String\", result.get(0));\nassertEquals(null, result.get(1));\nassertEquals(\"java.lang.Object\", result.get(2));\n\n@SuppressWarnings(\"unchecked\") // test what happens when non-gneric code adds wrong type of element",
            "begin_line": 212,
            "end_line": 226,
            "comment": "     -------------------------------------------------------------------------",
            "child_ranges": [
                "(line 213,col 9)-(line 213,col 56)",
                "(line 214,col 9)-(line 214,col 74)",
                "(line 215,col 9)-(line 215,col 39)",
                "(line 216,col 0)-(line 216,col 0)",
                "(line 217,col 9)-(line 217,col 31)",
                "(line 218,col 9)-(line 218,col 23)",
                "(line 219,col 9)-(line 219,col 31)",
                "(line 220,col 9)-(line 220,col 61)",
                "(line 221,col 9)-(line 221,col 39)",
                "(line 222,col 9)-(line 222,col 56)",
                "(line 223,col 9)-(line 223,col 42)",
                "(line 224,col 9)-(line 224,col 56)",
                "(line 225,col 0)-(line 225,col 0)"
            ]
        },
        {
            "class_name": "org.apache.commons.lang3.ClassUtilsTest",
            "child_classes": [],
            "src_path": "src/test/java/org/apache/commons/lang3/ClassUtilsTest.java",
            "signature": "org.apache.commons.lang3.ClassUtilsTest.test_isInnerClass_Class()",
            "snippet": "public void test_isInnerClass_Class() {\nassertEquals(true, ClassUtils.isInnerClass(Inner.class));\nassertEquals(true, ClassUtils.isInnerClass(Map.Entry.class));\nassertEquals(true, ClassUtils.isInnerClass(new Cloneable() {",
            "begin_line": 237,
            "end_line": 240,
            "comment": "     -------------------------------------------------------------------------",
            "child_ranges": [
                "(line 238,col 9)-(line 238,col 65)",
                "(line 239,col 9)-(line 239,col 69)"
            ]
        },
        {
            "class_name": "org.apache.commons.lang3.ClassUtilsTest",
            "child_classes": [],
            "src_path": "src/test/java/org/apache/commons/lang3/ClassUtilsTest.java",
            "signature": "org.apache.commons.lang3.ClassUtilsTest.testPrimitiveToWrapper()",
            "snippet": "public void testPrimitiveToWrapper() {\n\n// test primitive classes",
            "begin_line": 652,
            "end_line": 654,
            "comment": "         test boolean conversions",
            "child_ranges": [
                "(line 653,col 0)-(line 653,col 0)"
            ]
        },
        {
            "class_name": "org.apache.commons.lang3.ClassUtilsTest",
            "child_classes": [],
            "src_path": "src/test/java/org/apache/commons/lang3/ClassUtilsTest.java",
            "signature": "org.apache.commons.lang3.ClassUtilsTest.testPrimitivesToWrappers()",
            "snippet": "public void testPrimitivesToWrappers() {\n// test null",
            "begin_line": 686,
            "end_line": 687,
            "comment": "         test null",
            "child_ranges": []
        },
        {
            "class_name": "org.apache.commons.lang3.ClassUtilsTest",
            "child_classes": [],
            "src_path": "src/test/java/org/apache/commons/lang3/ClassUtilsTest.java",
            "signature": "org.apache.commons.lang3.ClassUtilsTest.testWrapperToPrimitive()",
            "snippet": "public void testWrapperToPrimitive() {\n// an array with classes to convert",
            "begin_line": 718,
            "end_line": 719,
            "comment": "         This used to return the exact same array, but no longer does.",
            "child_ranges": []
        },
        {
            "class_name": "org.apache.commons.lang3.ClassUtilsTest",
            "child_classes": [],
            "src_path": "src/test/java/org/apache/commons/lang3/ClassUtilsTest.java",
            "signature": "org.apache.commons.lang3.ClassUtilsTest.testWrapperToPrimitiveNoWrapper()",
            "snippet": "public void testWrapperToPrimitiveNoWrapper() {\nassertNull(\"Wrong result for non wrapper class\", ClassUtils.wrapperToPrimitive(String.class));\n}",
            "begin_line": 732,
            "end_line": 734,
            "comment": "         an array with classes to convert",
            "child_ranges": [
                "(line 733,col 9)-(line 733,col 102)"
            ]
        },
        {
            "class_name": "org.apache.commons.lang3.ClassUtilsTest",
            "child_classes": [],
            "src_path": "src/test/java/org/apache/commons/lang3/ClassUtilsTest.java",
            "signature": "org.apache.commons.lang3.ClassUtilsTest.testWrapperToPrimitiveNull()",
            "snippet": "public void testWrapperToPrimitiveNull() {\nassertNull(\"Wrong result for null class\", ClassUtils.wrapperToPrimitive(null));\n}",
            "begin_line": 736,
            "end_line": 738,
            "comment": "         an array with classes to convert",
            "child_ranges": [
                "(line 737,col 9)-(line 737,col 87)"
            ]
        },
        {
            "class_name": "org.apache.commons.lang3.ClassUtilsTest",
            "child_classes": [],
            "src_path": "src/test/java/org/apache/commons/lang3/ClassUtilsTest.java",
            "signature": "org.apache.commons.lang3.ClassUtilsTest.testWrappersToPrimitives()",
            "snippet": "public void testWrappersToPrimitives() {\n// an array with classes to test",
            "begin_line": 740,
            "end_line": 741,
            "comment": "         an array with classes to convert",
            "child_ranges": []
        },
        {
            "class_name": "org.apache.commons.lang3.ClassUtilsTest",
            "child_classes": [],
            "src_path": "src/test/java/org/apache/commons/lang3/ClassUtilsTest.java",
            "signature": "org.apache.commons.lang3.ClassUtilsTest.testWrappersToPrimitivesNull()",
            "snippet": "public void testWrappersToPrimitivesNull() {\nassertNull(\"Wrong result for null input\", ClassUtils.wrappersToPrimitives(null));\n}",
            "begin_line": 758,
            "end_line": 760,
            "comment": "         now test the result",
            "child_ranges": [
                "(line 759,col 9)-(line 759,col 89)"
            ]
        },
        {
            "class_name": "org.apache.commons.lang3.ClassUtilsTest",
            "child_classes": [],
            "src_path": "src/test/java/org/apache/commons/lang3/ClassUtilsTest.java",
            "signature": "org.apache.commons.lang3.ClassUtilsTest.testWrappersToPrimitivesEmpty()",
            "snippet": "public void testWrappersToPrimitivesEmpty() {\nClass<?>[] empty = new Class[0];\nassertEquals(\"Wrong result for empty input\", empty, ClassUtils.wrappersToPrimitives(empty));\n}",
            "begin_line": 762,
            "end_line": 765,
            "comment": "         now test the result",
            "child_ranges": [
                "(line 763,col 9)-(line 763,col 40)",
                "(line 764,col 9)-(line 764,col 100)"
            ]
        },
        {
            "class_name": "org.apache.commons.lang3.ClassUtilsTest",
            "child_classes": [],
            "src_path": "src/test/java/org/apache/commons/lang3/ClassUtilsTest.java",
            "signature": "org.apache.commons.lang3.ClassUtilsTest.testToClass_object()",
            "snippet": "public void testToClass_object() {\nassertNull(ClassUtils.toClass(null));\n\nassertSame(ArrayUtils.EMPTY_CLASS_ARRAY, ClassUtils.toClass(ArrayUtils.EMPTY_OBJECT_ARRAY));\n\nassertTrue(Arrays.equals(new Class[] { String.class, Integer.class, Double.class },",
            "begin_line": 902,
            "end_line": 907,
            "comment": "         Tests with a public Class",
            "child_ranges": [
                "(line 903,col 9)-(line 903,col 45)",
                "(line 904,col 0)-(line 904,col 0)",
                "(line 905,col 9)-(line 905,col 100)",
                "(line 906,col 0)-(line 906,col 0)"
            ]
        },
        {
            "class_name": "org.apache.commons.lang3.ClassUtilsTest",
            "child_classes": [],
            "src_path": "src/test/java/org/apache/commons/lang3/ClassUtilsTest.java",
            "signature": "org.apache.commons.lang3.ClassUtilsTest.test_getShortCanonicalName_Object()",
            "snippet": "public void test_getShortCanonicalName_Object() {\nassertEquals(\"<null>\", ClassUtils.getShortCanonicalName(null, \"<null>\"));\nassertEquals(\"ClassUtils\", ClassUtils.getShortCanonicalName(new ClassUtils(), \"<null>\"));\nassertEquals(\"ClassUtils[]\", ClassUtils.getShortCanonicalName(new ClassUtils[0], \"<null>\"));\nassertEquals(\"ClassUtils[][]\", ClassUtils.getShortCanonicalName(new ClassUtils[0][0], \"<null>\"));\nassertEquals(\"int[]\", ClassUtils.getShortCanonicalName(new int[0], \"<null>\"));\nassertEquals(\"int[][]\", ClassUtils.getShortCanonicalName(new int[0][0], \"<null>\"));\n}",
            "begin_line": 914,
            "end_line": 921,
            "comment": "         Tests with a public Class",
            "child_ranges": [
                "(line 915,col 9)-(line 915,col 81)",
                "(line 916,col 9)-(line 916,col 97)",
                "(line 917,col 9)-(line 917,col 100)",
                "(line 918,col 9)-(line 918,col 105)",
                "(line 919,col 9)-(line 919,col 86)",
                "(line 920,col 9)-(line 920,col 91)"
            ]
        },
        {
            "class_name": "org.apache.commons.lang3.ClassUtilsTest",
            "child_classes": [],
            "src_path": "src/test/java/org/apache/commons/lang3/ClassUtilsTest.java",
            "signature": "org.apache.commons.lang3.ClassUtilsTest.test_getShortCanonicalName_Class()",
            "snippet": "public void test_getShortCanonicalName_Class() {\nassertEquals(\"ClassUtils\", ClassUtils.getShortCanonicalName(ClassUtils.class));\nassertEquals(\"ClassUtils[]\", ClassUtils.getShortCanonicalName(ClassUtils[].class));\nassertEquals(\"ClassUtils[][]\", ClassUtils.getShortCanonicalName(ClassUtils[][].class));\nassertEquals(\"int[]\", ClassUtils.getShortCanonicalName(int[].class));\nassertEquals(\"int[][]\", ClassUtils.getShortCanonicalName(int[][].class));\n}",
            "begin_line": 923,
            "end_line": 929,
            "comment": "         Tests with a public Class",
            "child_ranges": [
                "(line 924,col 9)-(line 924,col 87)",
                "(line 925,col 9)-(line 925,col 91)",
                "(line 926,col 9)-(line 926,col 95)",
                "(line 927,col 9)-(line 927,col 77)",
                "(line 928,col 9)-(line 928,col 81)"
            ]
        },
        {
            "class_name": "org.apache.commons.lang3.ClassUtilsTest",
            "child_classes": [],
            "src_path": "src/test/java/org/apache/commons/lang3/ClassUtilsTest.java",
            "signature": "org.apache.commons.lang3.ClassUtilsTest.test_getShortCanonicalName_String()",
            "snippet": "public void test_getShortCanonicalName_String() {\nassertEquals(\"ClassUtils\", ClassUtils.getShortCanonicalName(\"org.apache.commons.lang3.ClassUtils\"));\nassertEquals(\"ClassUtils[]\", ClassUtils.getShortCanonicalName(\"[Lorg.apache.commons.lang3.ClassUtils;\"));\nassertEquals(\"ClassUtils[][]\", ClassUtils.getShortCanonicalName(\"[[Lorg.apache.commons.lang3.ClassUtils;\"));\nassertEquals(\"ClassUtils[]\", ClassUtils.getShortCanonicalName(\"org.apache.commons.lang3.ClassUtils[]\"));\nassertEquals(\"ClassUtils[][]\", ClassUtils.getShortCanonicalName(\"org.apache.commons.lang3.ClassUtils[][]\"));\nassertEquals(\"int[]\", ClassUtils.getShortCanonicalName(\"[I\"));\nassertEquals(\"int[][]\", ClassUtils.getShortCanonicalName(\"[[I\"));\nassertEquals(\"int[]\", ClassUtils.getShortCanonicalName(\"int[]\"));\nassertEquals(\"int[][]\", ClassUtils.getShortCanonicalName(\"int[][]\"));\n}",
            "begin_line": 931,
            "end_line": 941,
            "comment": "         Tests with a public Class",
            "child_ranges": [
                "(line 932,col 9)-(line 932,col 108)",
                "(line 933,col 9)-(line 933,col 113)",
                "(line 934,col 9)-(line 934,col 116)",
                "(line 935,col 9)-(line 935,col 112)",
                "(line 936,col 9)-(line 936,col 116)",
                "(line 937,col 9)-(line 937,col 70)",
                "(line 938,col 9)-(line 938,col 73)",
                "(line 939,col 9)-(line 939,col 73)",
                "(line 940,col 9)-(line 940,col 77)"
            ]
        },
        {
            "class_name": "org.apache.commons.lang3.ClassUtilsTest",
            "child_classes": [],
            "src_path": "src/test/java/org/apache/commons/lang3/ClassUtilsTest.java",
            "signature": "org.apache.commons.lang3.ClassUtilsTest.test_getPackageCanonicalName_Object()",
            "snippet": "public void test_getPackageCanonicalName_Object() {\nassertEquals(\"<null>\", ClassUtils.getPackageCanonicalName(null, \"<null>\"));\nassertEquals(\"org.apache.commons.lang3\", ClassUtils.getPackageCanonicalName(new ClassUtils(), \"<null>\"));\nassertEquals(\"org.apache.commons.lang3\", ClassUtils.getPackageCanonicalName(new ClassUtils[0], \"<null>\"));\nassertEquals(\"org.apache.commons.lang3\", ClassUtils.getPackageCanonicalName(new ClassUtils[0][0], \"<null>\"));\nassertEquals(\"\", ClassUtils.getPackageCanonicalName(new int[0], \"<null>\"));\nassertEquals(\"\", ClassUtils.getPackageCanonicalName(new int[0][0], \"<null>\"));\n}",
            "begin_line": 943,
            "end_line": 950,
            "comment": "         Tests with a public Class",
            "child_ranges": [
                "(line 944,col 9)-(line 944,col 83)",
                "(line 945,col 9)-(line 945,col 113)",
                "(line 946,col 9)-(line 946,col 114)",
                "(line 947,col 9)-(line 947,col 117)",
                "(line 948,col 9)-(line 948,col 83)",
                "(line 949,col 9)-(line 949,col 86)"
            ]
        },
        {
            "class_name": "org.apache.commons.lang3.ClassUtilsTest",
            "child_classes": [],
            "src_path": "src/test/java/org/apache/commons/lang3/ClassUtilsTest.java",
            "signature": "org.apache.commons.lang3.ClassUtilsTest.test_getPackageCanonicalName_Class()",
            "snippet": "public void test_getPackageCanonicalName_Class() {\nassertEquals(\"org.apache.commons.lang3\", ClassUtils.getPackageCanonicalName(ClassUtils.class));\nassertEquals(\"org.apache.commons.lang3\", ClassUtils.getPackageCanonicalName(ClassUtils[].class));\nassertEquals(\"org.apache.commons.lang3\", ClassUtils.getPackageCanonicalName(ClassUtils[][].class));\nassertEquals(\"\", ClassUtils.getPackageCanonicalName(int[].class));\nassertEquals(\"\", ClassUtils.getPackageCanonicalName(int[][].class));\n}",
            "begin_line": 952,
            "end_line": 958,
            "comment": "         Tests with a public Class",
            "child_ranges": [
                "(line 953,col 9)-(line 953,col 103)",
                "(line 954,col 9)-(line 954,col 105)",
                "(line 955,col 9)-(line 955,col 107)",
                "(line 956,col 9)-(line 956,col 74)",
                "(line 957,col 9)-(line 957,col 76)"
            ]
        },
        {
            "class_name": "org.apache.commons.lang3.ClassUtilsTest",
            "child_classes": [],
            "src_path": "src/test/java/org/apache/commons/lang3/ClassUtilsTest.java",
            "signature": "org.apache.commons.lang3.ClassUtilsTest.test_getPackageCanonicalName_String()",
            "snippet": "public void test_getPackageCanonicalName_String() {\nassertEquals(\"org.apache.commons.lang3\",",
            "begin_line": 960,
            "end_line": 961,
            "comment": "         Tests with a public Class",
            "child_ranges": []
        }
    ]
]