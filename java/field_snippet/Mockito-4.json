[
  {
    "class_name": "Matchers",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/Matchers.java",
    "signature": "Matchers.MOCKING_PROGRESS",
    "snippet": "private static final MockingProgress MOCKING_PROGRESS\u003dnew ThreadSafeMockingProgress();",
    "begin_line": 100,
    "end_line": 100,
    "comment": ""
  },
  {
    "class_name": "Mockito",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/Mockito.java",
    "signature": "Mockito.MOCKITO_CORE",
    "snippet": "static final MockitoCore MOCKITO_CORE\u003dnew MockitoCore();",
    "begin_line": 975,
    "end_line": 975,
    "comment": ""
  },
  {
    "class_name": "Mockito",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/Mockito.java",
    "signature": "Mockito.RETURNS_DEFAULTS",
    "snippet": "public static final Answer\u003cObject\u003e RETURNS_DEFAULTS\u003dAnswers.RETURNS_DEFAULTS;",
    "begin_line": 986,
    "end_line": 986,
    "comment": "/** \n * The default \u003ccode\u003eAnswer\u003c/code\u003e of every mock \u003cb\u003eif\u003c/b\u003e the mock was not stubbed. Typically it just returns some empty value. \u003cp\u003e {@link Answer} can be used to define the return values of unstubbed invocations.\u003cp\u003e This implementation first tries the global configuration. If there is no global configuration then it uses  {@link ReturnsEmptyValues} (returns zeros, empty collections, nulls, etc.)\n */\n"
  },
  {
    "class_name": "Mockito",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/Mockito.java",
    "signature": "Mockito.RETURNS_SMART_NULLS",
    "snippet": "public static final Answer\u003cObject\u003e RETURNS_SMART_NULLS\u003dAnswers.RETURNS_SMART_NULLS;",
    "begin_line": 1018,
    "end_line": 1018,
    "comment": "/** \n * Optional \u003ccode\u003eAnswer\u003c/code\u003e to be used with  {@link Mockito#mock(Class,Answer)}. \u003cp\u003e {@link Answer} can be used to define the return values of unstubbed invocations.\u003cp\u003e This implementation can be helpful when working with legacy code. Unstubbed methods often return null. If your code uses the object returned by an unstubbed call you get a NullPointerException. This implementation of Answer \u003cb\u003ereturns SmartNull instead of null\u003c/b\u003e. \u003ccode\u003eSmartNull\u003c/code\u003e gives nicer exception message than NPE because it points out the line where unstubbed method was called. You just click on the stack trace. \u003cp\u003e \u003ccode\u003eReturnsSmartNulls\u003c/code\u003e first tries to return ordinary return values (see  {@link ReturnsMoreEmptyValues}) then it tries to return SmartNull. If the return type is final then plain null is returned. \u003cp\u003e \u003ccode\u003eReturnsSmartNulls\u003c/code\u003e will be probably the default return values strategy in Mockito 2.0. \u003cp\u003e Example: \u003cpre class\u003d\"code\"\u003e\u003ccode class\u003d\"java\"\u003e Foo mock \u003d (Foo.class, RETURNS_SMART_NULLS); //calling unstubbed method here: Stuff stuff \u003d mock.getStuff(); //using object returned by unstubbed call: stuff.doSomething(); //Above doesn\u0027t yield NullPointerException this time! //Instead, SmartNullPointerException is thrown. //Exception\u0027s cause links to unstubbed \u003ci\u003emock.getStuff()\u003c/i\u003e - just click on the stack trace. \u003c/code\u003e\u003c/pre\u003e\n */\n"
  },
  {
    "class_name": "Mockito",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/Mockito.java",
    "signature": "Mockito.RETURNS_MOCKS",
    "snippet": "public static final Answer\u003cObject\u003e RETURNS_MOCKS\u003dAnswers.RETURNS_MOCKS;",
    "begin_line": 1031,
    "end_line": 1031,
    "comment": "/** \n * Optional \u003ccode\u003eAnswer\u003c/code\u003e to be used with  {@link Mockito#mock(Class,Answer)}\u003cp\u003e {@link Answer} can be used to define the return values of unstubbed invocations.\u003cp\u003e This implementation can be helpful when working with legacy code. \u003cp\u003e ReturnsMocks first tries to return ordinary return values (see  {@link ReturnsMoreEmptyValues}) then it tries to return mocks. If the return type cannot be mocked (e.g. is final) then plain null is returned. \u003cp\u003e\n */\n"
  },
  {
    "class_name": "Mockito",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/Mockito.java",
    "signature": "Mockito.RETURNS_DEEP_STUBS",
    "snippet": "public static final Answer\u003cObject\u003e RETURNS_DEEP_STUBS\u003dAnswers.RETURNS_DEEP_STUBS;",
    "begin_line": 1118,
    "end_line": 1118,
    "comment": "/** \n * Optional \u003ccode\u003eAnswer\u003c/code\u003e to be used with  {@link Mockito#mock(Class,Answer)}. \u003cp\u003e Example that shows how deep stub works: \u003cpre class\u003d\"code\"\u003e\u003ccode class\u003d\"java\"\u003e Foo mock \u003d mock(Foo.class, RETURNS_DEEP_STUBS); // note that we\u0027re stubbing a chain of methods here: getBar().getName() when(mock.getBar().getName()).thenReturn(\"deep\"); // note that we\u0027re chaining method calls: getBar().getName() assertEquals(\"deep\", mock.getBar().getName()); \u003c/code\u003e\u003c/pre\u003e \u003c/p\u003e \u003cp\u003e \u003cstrong\u003eWARNING: \u003c/strong\u003e This feature should rarely be required for regular clean code! Leave it for legacy code. Mocking a mock to return a mock, to return a mock, (...), to return something meaningful hints at violation of Law of Demeter or mocking a value object (a well known anti-pattern). \u003c/p\u003e \u003cp\u003e Good quote I\u0027ve seen one day on the web: \u003cstrong\u003eevery time a mock returns a mock a fairy dies\u003c/strong\u003e. \u003c/p\u003e \u003cp\u003e Please note that this answer will return existing mocks that matches the stub. This behavior is ok with deep stubs and allows verification to work on the last mock of the chain. \u003cpre class\u003d\"code\"\u003e\u003ccode class\u003d\"java\"\u003e when(mock.getBar(anyString()).getThingy().getName()).thenReturn(\"deep\"); mock.getBar(\"candy bar\").getThingy().getName(); assertSame(mock.getBar(anyString()).getThingy().getName(), mock.getBar(anyString()).getThingy().getName()); verify(mock.getBar(\"candy bar\").getThingy()).getName(); verify(mock.getBar(anyString()).getThingy()).getName(); \u003c/code\u003e\u003c/pre\u003e \u003c/p\u003e \u003cp\u003e Verification only works with the last mock in the chain. You can use verification modes. \u003cpre class\u003d\"code\"\u003e\u003ccode class\u003d\"java\"\u003e when(person.getAddress(anyString()).getStreet().getName()).thenReturn(\"deep\"); when(person.getAddress(anyString()).getStreet(Locale.ITALIAN).getName()).thenReturn(\"deep\"); when(person.getAddress(anyString()).getStreet(Locale.CHINESE).getName()).thenReturn(\"deep\"); person.getAddress(\"the docks\").getStreet().getName(); person.getAddress(\"the docks\").getStreet().getLongName(); person.getAddress(\"the docks\").getStreet(Locale.ITALIAN).getName(); person.getAddress(\"the docks\").getStreet(Locale.CHINESE).getName(); // note that we are actually referring to the very last mock in the stubbing chain. InOrder inOrder \u003d inOrder( person.getAddress(\"the docks\").getStreet(), person.getAddress(\"the docks\").getStreet(Locale.CHINESE), person.getAddress(\"the docks\").getStreet(Locale.ITALIAN) ); inOrder.verify(person.getAddress(\"the docks\").getStreet(), times(1)).getName(); inOrder.verify(person.getAddress(\"the docks\").getStreet()).getLongName(); inOrder.verify(person.getAddress(\"the docks\").getStreet(Locale.ITALIAN), atLeast(1)).getName(); inOrder.verify(person.getAddress(\"the docks\").getStreet(Locale.CHINESE)).getName(); \u003c/code\u003e\u003c/pre\u003e \u003c/p\u003e \u003cp\u003e How deep stub work internally? \u003cpre class\u003d\"code\"\u003e\u003ccode class\u003d\"java\"\u003e //this: Foo mock \u003d mock(Foo.class, RETURNS_DEEP_STUBS); when(mock.getBar().getName(), \"deep\"); //is equivalent of Foo foo \u003d mock(Foo.class); Bar bar \u003d mock(Bar.class); when(foo.getBar()).thenReturn(bar); when(bar.getName()).thenReturn(\"deep\"); \u003c/code\u003e\u003c/pre\u003e \u003c/p\u003e \u003cp\u003e This feature will not work when any return type of methods included in the chain cannot be mocked (for example: is a primitive or a final class). This is because of java type system. \u003c/p\u003e\n */\n"
  },
  {
    "class_name": "Mockito",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/Mockito.java",
    "signature": "Mockito.CALLS_REAL_METHODS",
    "snippet": "public static final Answer\u003cObject\u003e CALLS_REAL_METHODS\u003dAnswers.CALLS_REAL_METHODS;",
    "begin_line": 1152,
    "end_line": 1152,
    "comment": "/** \n * Optional \u003ccode\u003eAnswer\u003c/code\u003e to be used with  {@link Mockito#mock(Class,Answer)}\u003cp\u003e {@link Answer} can be used to define the return values of unstubbed invocations.\u003cp\u003e This implementation can be helpful when working with legacy code. When this implementation is used, unstubbed methods will delegate to the real implementation. This is a way to create a partial mock object that calls real methods by default. \u003cp\u003e As usual you are going to read \u003cb\u003ethe partial mock warning\u003c/b\u003e: Object oriented programming is more less tackling complexity by dividing the complexity into separate, specific, SRPy objects. How does partial mock fit into this paradigm? Well, it just doesn\u0027t... Partial mock usually means that the complexity has been moved to a different method on the same object. In most cases, this is not the way you want to design your application. \u003cp\u003e However, there are rare cases when partial mocks come handy: dealing with code you cannot change easily (3rd party interfaces, interim refactoring of legacy code etc.) However, I wouldn\u0027t use partial mocks for new, test-driven \u0026 well-designed code. \u003cp\u003e Example: \u003cpre class\u003d\"code\"\u003e\u003ccode class\u003d\"java\"\u003e Foo mock \u003d mock(Foo.class, CALLS_REAL_METHODS); // this calls the real implementation of Foo.getSomething() value \u003d mock.getSomething(); when(mock.getSomething()).thenReturn(fakeValue); // now fakeValue is returned value \u003d mock.getSomething(); \u003c/code\u003e\u003c/pre\u003e\n */\n"
  },
  {
    "class_name": "MockitoCore",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/MockitoCore.java",
    "signature": "MockitoCore.reporter",
    "snippet": "private final Reporter reporter\u003dnew Reporter();",
    "begin_line": 43,
    "end_line": 43,
    "comment": ""
  },
  {
    "class_name": "MockitoCore",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/MockitoCore.java",
    "signature": "MockitoCore.mockUtil",
    "snippet": "private final MockUtil mockUtil\u003dnew MockUtil();",
    "begin_line": 44,
    "end_line": 44,
    "comment": ""
  },
  {
    "class_name": "MockitoCore",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/MockitoCore.java",
    "signature": "MockitoCore.mockingProgress",
    "snippet": "private final MockingProgress mockingProgress\u003dnew ThreadSafeMockingProgress();",
    "begin_line": 45,
    "end_line": 45,
    "comment": ""
  },
  {
    "class_name": "ClassPathLoader",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/configuration/ClassPathLoader.java",
    "signature": "ClassPathLoader.MOCKITO_CONFIGURATION_CLASS_NAME",
    "snippet": "public static final String MOCKITO_CONFIGURATION_CLASS_NAME\u003d\"org.mockito.configuration.MockitoConfiguration\";",
    "begin_line": 58,
    "end_line": 58,
    "comment": ""
  },
  {
    "class_name": "DefaultAnnotationEngine",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/configuration/DefaultAnnotationEngine.java",
    "signature": "DefaultAnnotationEngine.annotationProcessorMap",
    "snippet": "private final Map\u003cClass\u003c? extends Annotation\u003e,FieldAnnotationProcessor\u003c?\u003e\u003e annotationProcessorMap\u003dnew HashMap\u003cClass\u003c? extends Annotation\u003e,FieldAnnotationProcessor\u003c?\u003e\u003e();",
    "begin_line": 30,
    "end_line": 30,
    "comment": ""
  },
  {
    "class_name": "GlobalConfiguration",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/configuration/GlobalConfiguration.java",
    "signature": "GlobalConfiguration.serialVersionUID",
    "snippet": "private static final long serialVersionUID\u003d-2860353062105505938L;",
    "begin_line": 20,
    "end_line": 20,
    "comment": ""
  },
  {
    "class_name": "GlobalConfiguration",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/configuration/GlobalConfiguration.java",
    "signature": "GlobalConfiguration.GLOBAL_CONFIGURATION",
    "snippet": "private static final ThreadLocal\u003cIMockitoConfiguration\u003e GLOBAL_CONFIGURATION\u003dnew ThreadLocal\u003cIMockitoConfiguration\u003e();",
    "begin_line": 22,
    "end_line": 22,
    "comment": ""
  },
  {
    "class_name": "InjectingAnnotationEngine",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/configuration/InjectingAnnotationEngine.java",
    "signature": "InjectingAnnotationEngine.delegate",
    "snippet": "private final AnnotationEngine delegate\u003dnew DefaultAnnotationEngine();",
    "begin_line": 24,
    "end_line": 24,
    "comment": ""
  },
  {
    "class_name": "InjectingAnnotationEngine",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/configuration/InjectingAnnotationEngine.java",
    "signature": "InjectingAnnotationEngine.spyAnnotationEngine",
    "snippet": "private final AnnotationEngine spyAnnotationEngine\u003dnew SpyAnnotationEngine();",
    "begin_line": 25,
    "end_line": 25,
    "comment": ""
  },
  {
    "class_name": "ConstructorInjection",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/configuration/injection/ConstructorInjection.java",
    "signature": "ConstructorInjection.argResolver",
    "snippet": "private ConstructorArgumentResolver argResolver;",
    "begin_line": 40,
    "end_line": 40,
    "comment": ""
  },
  {
    "class_name": "SimpleArgumentResolver",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/configuration/injection/ConstructorInjection.java",
    "signature": "SimpleArgumentResolver.objects",
    "snippet": "final Set\u003cObject\u003e objects;",
    "begin_line": 70,
    "end_line": 70,
    "comment": ""
  },
  {
    "class_name": "OngoingMockInjection",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/configuration/injection/MockInjection.java",
    "signature": "OngoingMockInjection.fields",
    "snippet": "private final Set\u003cField\u003e fields\u003dnew HashSet\u003cField\u003e();",
    "begin_line": 55,
    "end_line": 55,
    "comment": ""
  },
  {
    "class_name": "OngoingMockInjection",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/configuration/injection/MockInjection.java",
    "signature": "OngoingMockInjection.mocks",
    "snippet": "private final Set\u003cObject\u003e mocks\u003dnewMockSafeHashSet();",
    "begin_line": 56,
    "end_line": 56,
    "comment": ""
  },
  {
    "class_name": "OngoingMockInjection",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/configuration/injection/MockInjection.java",
    "signature": "OngoingMockInjection.fieldOwner",
    "snippet": "private final Object fieldOwner;",
    "begin_line": 57,
    "end_line": 57,
    "comment": ""
  },
  {
    "class_name": "OngoingMockInjection",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/configuration/injection/MockInjection.java",
    "signature": "OngoingMockInjection.injectionStrategies",
    "snippet": "private final MockInjectionStrategy injectionStrategies\u003dMockInjectionStrategy.nop();",
    "begin_line": 58,
    "end_line": 58,
    "comment": ""
  },
  {
    "class_name": "OngoingMockInjection",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/configuration/injection/MockInjection.java",
    "signature": "OngoingMockInjection.postInjectionStrategies",
    "snippet": "private final MockInjectionStrategy postInjectionStrategies\u003dMockInjectionStrategy.nop();",
    "begin_line": 59,
    "end_line": 59,
    "comment": ""
  },
  {
    "class_name": "MockInjectionStrategy",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/configuration/injection/MockInjectionStrategy.java",
    "signature": "MockInjectionStrategy.nextStrategy",
    "snippet": "private MockInjectionStrategy nextStrategy;",
    "begin_line": 28,
    "end_line": 28,
    "comment": ""
  },
  {
    "class_name": "PropertyAndSetterInjection",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/configuration/injection/PropertyAndSetterInjection.java",
    "signature": "PropertyAndSetterInjection.mockCandidateFilter",
    "snippet": "private final MockCandidateFilter mockCandidateFilter\u003dnew TypeBasedCandidateFilter(new NameBasedCandidateFilter(new FinalMockCandidateFilter()));",
    "begin_line": 62,
    "end_line": 62,
    "comment": ""
  },
  {
    "class_name": "PropertyAndSetterInjection",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/configuration/injection/PropertyAndSetterInjection.java",
    "signature": "PropertyAndSetterInjection.notFinalOrStatic",
    "snippet": "private final ListUtil.Filter\u003cField\u003e notFinalOrStatic\u003dnew ListUtil.Filter\u003cField\u003e(){\n  public boolean isOut(  Field object){\n    return Modifier.isFinal(object.getModifiers()) || Modifier.isStatic(object.getModifiers());\n  }\n}\n;",
    "begin_line": 63,
    "end_line": 68,
    "comment": ""
  },
  {
    "class_name": "NameBasedCandidateFilter",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter.java",
    "signature": "NameBasedCandidateFilter.next",
    "snippet": "private final MockCandidateFilter next;",
    "begin_line": 15,
    "end_line": 15,
    "comment": ""
  },
  {
    "class_name": "NameBasedCandidateFilter",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter.java",
    "signature": "NameBasedCandidateFilter.mockUtil",
    "snippet": "private final MockUtil mockUtil\u003dnew MockUtil();",
    "begin_line": 16,
    "end_line": 16,
    "comment": ""
  },
  {
    "class_name": "TypeBasedCandidateFilter",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter.java",
    "signature": "TypeBasedCandidateFilter.next",
    "snippet": "MockCandidateFilter next;",
    "begin_line": 14,
    "end_line": 14,
    "comment": ""
  },
  {
    "class_name": "InjectMocksScanner",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/configuration/injection/scanner/InjectMocksScanner.java",
    "signature": "InjectMocksScanner.clazz",
    "snippet": "private final Class\u003c?\u003e clazz;",
    "begin_line": 22,
    "end_line": 22,
    "comment": ""
  },
  {
    "class_name": "MockScanner",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/configuration/injection/scanner/MockScanner.java",
    "signature": "MockScanner.mockUtil",
    "snippet": "private final MockUtil mockUtil\u003dnew MockUtil();",
    "begin_line": 22,
    "end_line": 22,
    "comment": ""
  },
  {
    "class_name": "MockScanner",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/configuration/injection/scanner/MockScanner.java",
    "signature": "MockScanner.instance",
    "snippet": "private final Object instance;",
    "begin_line": 23,
    "end_line": 23,
    "comment": ""
  },
  {
    "class_name": "MockScanner",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/configuration/injection/scanner/MockScanner.java",
    "signature": "MockScanner.clazz",
    "snippet": "private final Class\u003c?\u003e clazz;",
    "begin_line": 24,
    "end_line": 24,
    "comment": ""
  },
  {
    "class_name": "PluginFinder",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/configuration/plugins/PluginFinder.java",
    "signature": "PluginFinder.pluginSwitch",
    "snippet": "private final PluginSwitch pluginSwitch;",
    "begin_line": 12,
    "end_line": 12,
    "comment": ""
  },
  {
    "class_name": "PluginLoader",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/configuration/plugins/PluginLoader.java",
    "signature": "PluginLoader.pluginSwitch",
    "snippet": "private final PluginSwitch pluginSwitch;",
    "begin_line": 14,
    "end_line": 14,
    "comment": ""
  },
  {
    "class_name": "PluginRegistry",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/configuration/plugins/PluginRegistry.java",
    "signature": "PluginRegistry.pluginSwitch",
    "snippet": "private final PluginSwitch pluginSwitch\u003dnew PluginLoader(new DefaultPluginSwitch()).loadPlugin(PluginSwitch.class,DefaultPluginSwitch.class.getName());",
    "begin_line": 10,
    "end_line": 10,
    "comment": ""
  },
  {
    "class_name": "PluginRegistry",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/configuration/plugins/PluginRegistry.java",
    "signature": "PluginRegistry.mockMaker",
    "snippet": "private final MockMaker mockMaker\u003dnew PluginLoader(pluginSwitch).loadPlugin(MockMaker.class,\"org.mockito.internal.creation.cglib.CglibMockMaker\");",
    "begin_line": 13,
    "end_line": 13,
    "comment": ""
  },
  {
    "class_name": "PluginRegistry",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/configuration/plugins/PluginRegistry.java",
    "signature": "PluginRegistry.stackTraceCleanerProvider",
    "snippet": "private final StackTraceCleanerProvider stackTraceCleanerProvider\u003dnew PluginLoader(pluginSwitch).loadPlugin(StackTraceCleanerProvider.class,\"org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleanerProvider\");",
    "begin_line": 16,
    "end_line": 16,
    "comment": ""
  },
  {
    "class_name": "Plugins",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/configuration/plugins/Plugins.java",
    "signature": "Plugins.registry",
    "snippet": "private static PluginRegistry registry\u003dnew PluginRegistry();",
    "begin_line": 11,
    "end_line": 11,
    "comment": ""
  },
  {
    "class_name": "MockSettingsImpl",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/MockSettingsImpl.java",
    "signature": "MockSettingsImpl.serialVersionUID",
    "snippet": "private static final long serialVersionUID\u003d4475297236197939569L;",
    "begin_line": 29,
    "end_line": 29,
    "comment": ""
  },
  {
    "class_name": "MockSettingsImpl",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/MockSettingsImpl.java",
    "signature": "MockSettingsImpl.useConstructor",
    "snippet": "private boolean useConstructor;",
    "begin_line": 30,
    "end_line": 30,
    "comment": ""
  },
  {
    "class_name": "MockSettingsImpl",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/MockSettingsImpl.java",
    "signature": "MockSettingsImpl.outerClassInstance",
    "snippet": "private Object outerClassInstance;",
    "begin_line": 31,
    "end_line": 31,
    "comment": ""
  },
  {
    "class_name": "AcrossJVMSerializationFeature",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/cglib/AcrossJVMSerializationFeature.java",
    "signature": "AcrossJVMSerializationFeature.serialVersionUID",
    "snippet": "private static final long serialVersionUID\u003d7411152578314420778L;",
    "begin_line": 58,
    "end_line": 58,
    "comment": ""
  },
  {
    "class_name": "AcrossJVMSerializationFeature",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/cglib/AcrossJVMSerializationFeature.java",
    "signature": "AcrossJVMSerializationFeature.MOCKITO_PROXY_MARKER",
    "snippet": "private static final String MOCKITO_PROXY_MARKER\u003d\"MockitoProxyMarker\";",
    "begin_line": 59,
    "end_line": 59,
    "comment": ""
  },
  {
    "class_name": "AcrossJVMSerializationFeature",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/cglib/AcrossJVMSerializationFeature.java",
    "signature": "AcrossJVMSerializationFeature.instanceLocalCurrentlySerializingFlag",
    "snippet": "private boolean instanceLocalCurrentlySerializingFlag\u003dfalse;",
    "begin_line": 60,
    "end_line": 60,
    "comment": ""
  },
  {
    "class_name": "AcrossJVMSerializationFeature",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/cglib/AcrossJVMSerializationFeature.java",
    "signature": "AcrossJVMSerializationFeature.mutex",
    "snippet": "private final Lock mutex\u003dnew ReentrantLock();",
    "begin_line": 61,
    "end_line": 61,
    "comment": ""
  },
  {
    "class_name": "AcrossJVMMockSerializationProxy",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/cglib/AcrossJVMSerializationFeature.java",
    "signature": "AcrossJVMMockSerializationProxy.serialVersionUID",
    "snippet": "private static final long serialVersionUID\u003d-7600267929109286514L;",
    "begin_line": 189,
    "end_line": 189,
    "comment": ""
  },
  {
    "class_name": "AcrossJVMMockSerializationProxy",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/cglib/AcrossJVMSerializationFeature.java",
    "signature": "AcrossJVMMockSerializationProxy.serializedMock",
    "snippet": "private final byte[] serializedMock;",
    "begin_line": 190,
    "end_line": 190,
    "comment": ""
  },
  {
    "class_name": "AcrossJVMMockSerializationProxy",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/cglib/AcrossJVMSerializationFeature.java",
    "signature": "AcrossJVMMockSerializationProxy.typeToMock",
    "snippet": "private final Class typeToMock;",
    "begin_line": 191,
    "end_line": 191,
    "comment": ""
  },
  {
    "class_name": "AcrossJVMMockSerializationProxy",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/cglib/AcrossJVMSerializationFeature.java",
    "signature": "AcrossJVMMockSerializationProxy.extraInterfaces",
    "snippet": "private final Set\u003cClass\u003e extraInterfaces;",
    "begin_line": 192,
    "end_line": 192,
    "comment": ""
  },
  {
    "class_name": "MockitoMockObjectInputStream",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/cglib/AcrossJVMSerializationFeature.java",
    "signature": "MockitoMockObjectInputStream.typeToMock",
    "snippet": "private final Class typeToMock;",
    "begin_line": 275,
    "end_line": 275,
    "comment": ""
  },
  {
    "class_name": "MockitoMockObjectInputStream",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/cglib/AcrossJVMSerializationFeature.java",
    "signature": "MockitoMockObjectInputStream.extraInterfaces",
    "snippet": "private final Set\u003cClass\u003e extraInterfaces;",
    "begin_line": 276,
    "end_line": 276,
    "comment": ""
  },
  {
    "class_name": "MockitoMockObjectOutputStream",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/cglib/AcrossJVMSerializationFeature.java",
    "signature": "MockitoMockObjectOutputStream.NOTHING",
    "snippet": "private static final String NOTHING\u003d\"\";",
    "begin_line": 381,
    "end_line": 381,
    "comment": ""
  },
  {
    "class_name": "ClassImposterizer",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/cglib/ClassImposterizer.java",
    "signature": "ClassImposterizer.instantiator",
    "snippet": "private final Instantiator instantiator;",
    "begin_line": 32,
    "end_line": 32,
    "comment": ""
  },
  {
    "class_name": "ClassImposterizer",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/cglib/ClassImposterizer.java",
    "signature": "ClassImposterizer.NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES",
    "snippet": "private static final NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES\u003dnew MockitoNamingPolicy(){\n  @Override public String getClassName(  String prefix,  String source,  Object key,  Predicate names){\n    return \"codegen.\" + super.getClassName(prefix,source,key,names);\n  }\n}\n;",
    "begin_line": 38,
    "end_line": 43,
    "comment": ""
  },
  {
    "class_name": "ClassImposterizer",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/cglib/ClassImposterizer.java",
    "signature": "ClassImposterizer.IGNORE_BRIDGE_METHODS",
    "snippet": "private static final CallbackFilter IGNORE_BRIDGE_METHODS\u003dnew CallbackFilter(){\n  public int accept(  Method method){\n    return method.isBridge() ? 1 : 0;\n  }\n}\n;",
    "begin_line": 44,
    "end_line": 49,
    "comment": ""
  },
  {
    "class_name": "MethodInterceptorFilter",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/cglib/MethodInterceptorFilter.java",
    "signature": "MethodInterceptorFilter.serialVersionUID",
    "snippet": "private static final long serialVersionUID\u003d6182795666612683784L;",
    "begin_line": 31,
    "end_line": 31,
    "comment": ""
  },
  {
    "class_name": "MethodInterceptorFilter",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/cglib/MethodInterceptorFilter.java",
    "signature": "MethodInterceptorFilter.handler",
    "snippet": "private final InternalMockHandler handler;",
    "begin_line": 32,
    "end_line": 32,
    "comment": ""
  },
  {
    "class_name": "MethodInterceptorFilter",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/cglib/MethodInterceptorFilter.java",
    "signature": "MethodInterceptorFilter.objectMethodsGuru",
    "snippet": "final ObjectMethodsGuru objectMethodsGuru\u003dnew ObjectMethodsGuru();",
    "begin_line": 33,
    "end_line": 33,
    "comment": ""
  },
  {
    "class_name": "MethodInterceptorFilter",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/cglib/MethodInterceptorFilter.java",
    "signature": "MethodInterceptorFilter.mockSettings",
    "snippet": "private final MockCreationSettings mockSettings;",
    "begin_line": 34,
    "end_line": 34,
    "comment": ""
  },
  {
    "class_name": "MethodInterceptorFilter",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/cglib/MethodInterceptorFilter.java",
    "signature": "MethodInterceptorFilter.acrossJVMSerializationFeature",
    "snippet": "private final AcrossJVMSerializationFeature acrossJVMSerializationFeature\u003dnew AcrossJVMSerializationFeature();",
    "begin_line": 35,
    "end_line": 35,
    "comment": ""
  },
  {
    "class_name": "MockitoNamingPolicy",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/cglib/MockitoNamingPolicy.java",
    "signature": "MockitoNamingPolicy.INSTANCE",
    "snippet": "public static final MockitoNamingPolicy INSTANCE\u003dnew MockitoNamingPolicy();",
    "begin_line": 11,
    "end_line": 11,
    "comment": ""
  },
  {
    "class_name": "InstantiatorProvider",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/instance/InstantiatorProvider.java",
    "signature": "InstantiatorProvider.INSTANCE",
    "snippet": "private final static Instantiator INSTANCE\u003dnew ObjenesisInstantiator();",
    "begin_line": 7,
    "end_line": 7,
    "comment": ""
  },
  {
    "class_name": "ObjenesisInstantiator",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/instance/ObjenesisInstantiator.java",
    "signature": "ObjenesisInstantiator.objenesis",
    "snippet": "private final ObjenesisStd objenesis\u003dnew ObjenesisStd(new GlobalConfiguration().enableClassCache());",
    "begin_line": 11,
    "end_line": 11,
    "comment": ""
  },
  {
    "class_name": "CreationSettings",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/settings/CreationSettings.java",
    "signature": "CreationSettings.serialVersionUID",
    "snippet": "private static final long serialVersionUID\u003d-6789800638070123629L;",
    "begin_line": 23,
    "end_line": 23,
    "comment": ""
  },
  {
    "class_name": "CreationSettings",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/settings/CreationSettings.java",
    "signature": "CreationSettings.typeToMock",
    "snippet": "protected Class\u003cT\u003e typeToMock;",
    "begin_line": 25,
    "end_line": 25,
    "comment": ""
  },
  {
    "class_name": "CreationSettings",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/settings/CreationSettings.java",
    "signature": "CreationSettings.extraInterfaces",
    "snippet": "protected Set\u003cClass\u003e extraInterfaces\u003dnew LinkedHashSet\u003cClass\u003e();",
    "begin_line": 26,
    "end_line": 26,
    "comment": ""
  },
  {
    "class_name": "CreationSettings",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/settings/CreationSettings.java",
    "signature": "CreationSettings.name",
    "snippet": "protected String name;",
    "begin_line": 27,
    "end_line": 27,
    "comment": ""
  },
  {
    "class_name": "CreationSettings",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/settings/CreationSettings.java",
    "signature": "CreationSettings.spiedInstance",
    "snippet": "protected Object spiedInstance;",
    "begin_line": 28,
    "end_line": 28,
    "comment": ""
  },
  {
    "class_name": "CreationSettings",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/settings/CreationSettings.java",
    "signature": "CreationSettings.defaultAnswer",
    "snippet": "protected Answer\u003cObject\u003e defaultAnswer;",
    "begin_line": 29,
    "end_line": 29,
    "comment": ""
  },
  {
    "class_name": "CreationSettings",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/settings/CreationSettings.java",
    "signature": "CreationSettings.mockName",
    "snippet": "protected MockName mockName;",
    "begin_line": 30,
    "end_line": 30,
    "comment": ""
  },
  {
    "class_name": "CreationSettings",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/settings/CreationSettings.java",
    "signature": "CreationSettings.serializableMode",
    "snippet": "protected SerializableMode serializableMode\u003dSerializableMode.NONE;",
    "begin_line": 31,
    "end_line": 31,
    "comment": ""
  },
  {
    "class_name": "CreationSettings",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/settings/CreationSettings.java",
    "signature": "CreationSettings.invocationListeners",
    "snippet": "protected List\u003cInvocationListener\u003e invocationListeners\u003dnew ArrayList\u003cInvocationListener\u003e();",
    "begin_line": 32,
    "end_line": 32,
    "comment": ""
  },
  {
    "class_name": "CreationSettings",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/settings/CreationSettings.java",
    "signature": "CreationSettings.stubOnly",
    "snippet": "protected boolean stubOnly;",
    "begin_line": 33,
    "end_line": 33,
    "comment": ""
  },
  {
    "class_name": "CreationSettings",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/settings/CreationSettings.java",
    "signature": "CreationSettings.useConstructor",
    "snippet": "private boolean useConstructor;",
    "begin_line": 34,
    "end_line": 34,
    "comment": ""
  },
  {
    "class_name": "CreationSettings",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/creation/settings/CreationSettings.java",
    "signature": "CreationSettings.outerClassInstance",
    "snippet": "private Object outerClassInstance;",
    "begin_line": 35,
    "end_line": 35,
    "comment": ""
  },
  {
    "class_name": "InvocationNotifierHandler",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/handler/InvocationNotifierHandler.java",
    "signature": "InvocationNotifierHandler.invocationListeners",
    "snippet": "private final List\u003cInvocationListener\u003e invocationListeners;",
    "begin_line": 28,
    "end_line": 28,
    "comment": ""
  },
  {
    "class_name": "InvocationNotifierHandler",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/handler/InvocationNotifierHandler.java",
    "signature": "InvocationNotifierHandler.mockHandler",
    "snippet": "private final InternalMockHandler\u003cT\u003e mockHandler;",
    "begin_line": 29,
    "end_line": 29,
    "comment": ""
  },
  {
    "class_name": "MockHandlerImpl",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/handler/MockHandlerImpl.java",
    "signature": "MockHandlerImpl.serialVersionUID",
    "snippet": "private static final long serialVersionUID\u003d-2917871070982574165L;",
    "begin_line": 32,
    "end_line": 32,
    "comment": ""
  },
  {
    "class_name": "MockHandlerImpl",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/handler/MockHandlerImpl.java",
    "signature": "MockHandlerImpl.invocationContainerImpl",
    "snippet": "InvocationContainerImpl invocationContainerImpl;",
    "begin_line": 34,
    "end_line": 34,
    "comment": ""
  },
  {
    "class_name": "MockHandlerImpl",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/handler/MockHandlerImpl.java",
    "signature": "MockHandlerImpl.matchersBinder",
    "snippet": "MatchersBinder matchersBinder\u003dnew MatchersBinder();",
    "begin_line": 35,
    "end_line": 35,
    "comment": ""
  },
  {
    "class_name": "MockHandlerImpl",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/handler/MockHandlerImpl.java",
    "signature": "MockHandlerImpl.mockingProgress",
    "snippet": "MockingProgress mockingProgress\u003dnew ThreadSafeMockingProgress();",
    "begin_line": 36,
    "end_line": 36,
    "comment": ""
  },
  {
    "class_name": "MockHandlerImpl",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/handler/MockHandlerImpl.java",
    "signature": "MockHandlerImpl.mockSettings",
    "snippet": "private final MockCreationSettings mockSettings;",
    "begin_line": 38,
    "end_line": 38,
    "comment": ""
  },
  {
    "class_name": "NullResultGuardian",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/handler/NullResultGuardian.java",
    "signature": "NullResultGuardian.delegate",
    "snippet": "private final InternalMockHandler delegate;",
    "begin_line": 22,
    "end_line": 22,
    "comment": ""
  },
  {
    "class_name": "MatchersBinder",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/invocation/MatchersBinder.java",
    "signature": "MatchersBinder.serialVersionUID",
    "snippet": "private static final long serialVersionUID\u003d-311433939339443463L;",
    "begin_line": 20,
    "end_line": 20,
    "comment": ""
  },
  {
    "class_name": "ArgumentMatcherStorageImpl",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/progress/ArgumentMatcherStorageImpl.java",
    "signature": "ArgumentMatcherStorageImpl.TWO_SUB_MATCHERS",
    "snippet": "public static final int TWO_SUB_MATCHERS\u003d2;",
    "begin_line": 24,
    "end_line": 24,
    "comment": ""
  },
  {
    "class_name": "ArgumentMatcherStorageImpl",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/progress/ArgumentMatcherStorageImpl.java",
    "signature": "ArgumentMatcherStorageImpl.ONE_SUB_MATCHER",
    "snippet": "public static final int ONE_SUB_MATCHER\u003d1;",
    "begin_line": 25,
    "end_line": 25,
    "comment": ""
  },
  {
    "class_name": "ArgumentMatcherStorageImpl",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/progress/ArgumentMatcherStorageImpl.java",
    "signature": "ArgumentMatcherStorageImpl.matcherStack",
    "snippet": "private final Stack\u003cLocalizedMatcher\u003e matcherStack\u003dnew Stack\u003cLocalizedMatcher\u003e();",
    "begin_line": 26,
    "end_line": 26,
    "comment": ""
  },
  {
    "class_name": "MockingProgressImpl",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/progress/MockingProgressImpl.java",
    "signature": "MockingProgressImpl.reporter",
    "snippet": "private final Reporter reporter\u003dnew Reporter();",
    "begin_line": 21,
    "end_line": 21,
    "comment": ""
  },
  {
    "class_name": "MockingProgressImpl",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/progress/MockingProgressImpl.java",
    "signature": "MockingProgressImpl.argumentMatcherStorage",
    "snippet": "private final ArgumentMatcherStorage argumentMatcherStorage\u003dnew ArgumentMatcherStorageImpl();",
    "begin_line": 22,
    "end_line": 22,
    "comment": ""
  },
  {
    "class_name": "MockingProgressImpl",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/progress/MockingProgressImpl.java",
    "signature": "MockingProgressImpl.iOngoingStubbing",
    "snippet": "IOngoingStubbing iOngoingStubbing;",
    "begin_line": 24,
    "end_line": 24,
    "comment": ""
  },
  {
    "class_name": "MockingProgressImpl",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/progress/MockingProgressImpl.java",
    "signature": "MockingProgressImpl.verificationMode",
    "snippet": "private Localized\u003cVerificationMode\u003e verificationMode;",
    "begin_line": 25,
    "end_line": 25,
    "comment": ""
  },
  {
    "class_name": "MockingProgressImpl",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/progress/MockingProgressImpl.java",
    "signature": "MockingProgressImpl.stubbingInProgress",
    "snippet": "private Location stubbingInProgress\u003dnull;",
    "begin_line": 26,
    "end_line": 26,
    "comment": ""
  },
  {
    "class_name": "MockingProgressImpl",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/progress/MockingProgressImpl.java",
    "signature": "MockingProgressImpl.listener",
    "snippet": "private MockingProgressListener listener;",
    "begin_line": 27,
    "end_line": 27,
    "comment": ""
  },
  {
    "class_name": "ThreadSafeMockingProgress",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/progress/ThreadSafeMockingProgress.java",
    "signature": "ThreadSafeMockingProgress.serialVersionUID",
    "snippet": "private static final long serialVersionUID\u003d6839454041642082618L;",
    "begin_line": 17,
    "end_line": 17,
    "comment": ""
  },
  {
    "class_name": "ThreadSafeMockingProgress",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/progress/ThreadSafeMockingProgress.java",
    "signature": "ThreadSafeMockingProgress.mockingProgress",
    "snippet": "private static final ThreadLocal\u003cMockingProgress\u003e mockingProgress\u003dnew ThreadLocal\u003cMockingProgress\u003e();",
    "begin_line": 18,
    "end_line": 18,
    "comment": ""
  },
  {
    "class_name": "InvocationContainerImpl",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/stubbing/InvocationContainerImpl.java",
    "signature": "InvocationContainerImpl.serialVersionUID",
    "snippet": "private static final long serialVersionUID\u003d-5334301962749537177L;",
    "begin_line": 26,
    "end_line": 26,
    "comment": ""
  },
  {
    "class_name": "InvocationContainerImpl",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/stubbing/InvocationContainerImpl.java",
    "signature": "InvocationContainerImpl.stubbed",
    "snippet": "private final LinkedList\u003cStubbedInvocationMatcher\u003e stubbed\u003dnew LinkedList\u003cStubbedInvocationMatcher\u003e();",
    "begin_line": 27,
    "end_line": 27,
    "comment": ""
  },
  {
    "class_name": "InvocationContainerImpl",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/stubbing/InvocationContainerImpl.java",
    "signature": "InvocationContainerImpl.mockingProgress",
    "snippet": "private final MockingProgress mockingProgress;",
    "begin_line": 28,
    "end_line": 28,
    "comment": ""
  },
  {
    "class_name": "InvocationContainerImpl",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/stubbing/InvocationContainerImpl.java",
    "signature": "InvocationContainerImpl.answersForStubbing",
    "snippet": "private final List\u003cAnswer\u003e answersForStubbing\u003dnew ArrayList\u003cAnswer\u003e();",
    "begin_line": 29,
    "end_line": 29,
    "comment": ""
  },
  {
    "class_name": "InvocationContainerImpl",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/stubbing/InvocationContainerImpl.java",
    "signature": "InvocationContainerImpl.registeredInvocations",
    "snippet": "private final RegisteredInvocations registeredInvocations;",
    "begin_line": 30,
    "end_line": 30,
    "comment": ""
  },
  {
    "class_name": "InvocationContainerImpl",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/stubbing/InvocationContainerImpl.java",
    "signature": "InvocationContainerImpl.invocationForStubbing",
    "snippet": "private InvocationMatcher invocationForStubbing;",
    "begin_line": 32,
    "end_line": 32,
    "comment": ""
  },
  {
    "class_name": "CallsRealMethods",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/stubbing/answers/CallsRealMethods.java",
    "signature": "CallsRealMethods.serialVersionUID",
    "snippet": "private static final long serialVersionUID\u003d9057165148930624087L;",
    "begin_line": 36,
    "end_line": 36,
    "comment": ""
  },
  {
    "class_name": "Returns",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/stubbing/answers/Returns.java",
    "signature": "Returns.serialVersionUID",
    "snippet": "private static final long serialVersionUID\u003d-6245608253574215396L;",
    "begin_line": 14,
    "end_line": 14,
    "comment": ""
  },
  {
    "class_name": "Returns",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/stubbing/answers/Returns.java",
    "signature": "Returns.value",
    "snippet": "private final Object value;",
    "begin_line": 15,
    "end_line": 15,
    "comment": ""
  },
  {
    "class_name": "GloballyConfiguredAnswer",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/stubbing/defaultanswers/GloballyConfiguredAnswer.java",
    "signature": "GloballyConfiguredAnswer.serialVersionUID",
    "snippet": "private static final long serialVersionUID\u003d3585893470101750917L;",
    "begin_line": 21,
    "end_line": 21,
    "comment": ""
  },
  {
    "class_name": "ReturnsDeepStubs",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
    "signature": "ReturnsDeepStubs.serialVersionUID",
    "snippet": "private static final long serialVersionUID\u003d-7105341425736035847L;",
    "begin_line": 45,
    "end_line": 45,
    "comment": ""
  },
  {
    "class_name": "ReturnsDeepStubsSerializationFallback",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
    "signature": "ReturnsDeepStubsSerializationFallback.returnTypeGenericMetadata",
    "snippet": "@SuppressWarnings(\"serial\") private final GenericMetadataSupport returnTypeGenericMetadata;",
    "begin_line": 126,
    "end_line": 126,
    "comment": ""
  },
  {
    "class_name": "DeeplyStubbedAnswer",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
    "signature": "DeeplyStubbedAnswer.mock",
    "snippet": "@SuppressWarnings(\"serial\") private final Object mock;",
    "begin_line": 144,
    "end_line": 144,
    "comment": ""
  },
  {
    "class_name": "LazyHolder",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
    "signature": "LazyHolder.MOCKITO_CORE",
    "snippet": "private static final MockitoCore MOCKITO_CORE\u003dnew MockitoCore();",
    "begin_line": 164,
    "end_line": 164,
    "comment": ""
  },
  {
    "class_name": "LazyHolder",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
    "signature": "LazyHolder.DELEGATE",
    "snippet": "private static final ReturnsEmptyValues DELEGATE\u003dnew ReturnsEmptyValues();",
    "begin_line": 165,
    "end_line": 165,
    "comment": ""
  },
  {
    "class_name": "ReturnsEmptyValues",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java",
    "signature": "ReturnsEmptyValues.serialVersionUID",
    "snippet": "private static final long serialVersionUID\u003d1998191268711234347L;",
    "begin_line": 56,
    "end_line": 56,
    "comment": ""
  },
  {
    "class_name": "ReturnsEmptyValues",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java",
    "signature": "ReturnsEmptyValues.methodsGuru",
    "snippet": "ObjectMethodsGuru methodsGuru\u003dnew ObjectMethodsGuru();",
    "begin_line": 57,
    "end_line": 57,
    "comment": ""
  },
  {
    "class_name": "ReturnsEmptyValues",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java",
    "signature": "ReturnsEmptyValues.mockUtil",
    "snippet": "MockUtil mockUtil\u003dnew MockUtil();",
    "begin_line": 58,
    "end_line": 58,
    "comment": ""
  },
  {
    "class_name": "ReturnsMocks",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/stubbing/defaultanswers/ReturnsMocks.java",
    "signature": "ReturnsMocks.serialVersionUID",
    "snippet": "private static final long serialVersionUID\u003d-6755257986994634579L;",
    "begin_line": 16,
    "end_line": 16,
    "comment": ""
  },
  {
    "class_name": "ReturnsMocks",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/stubbing/defaultanswers/ReturnsMocks.java",
    "signature": "ReturnsMocks.mockitoCore",
    "snippet": "private final MockitoCore mockitoCore\u003dnew MockitoCore();",
    "begin_line": 17,
    "end_line": 17,
    "comment": ""
  },
  {
    "class_name": "ReturnsMocks",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/stubbing/defaultanswers/ReturnsMocks.java",
    "signature": "ReturnsMocks.delegate",
    "snippet": "private final Answer\u003cObject\u003e delegate\u003dnew ReturnsMoreEmptyValues();",
    "begin_line": 18,
    "end_line": 18,
    "comment": ""
  },
  {
    "class_name": "ReturnsMoreEmptyValues",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/stubbing/defaultanswers/ReturnsMoreEmptyValues.java",
    "signature": "ReturnsMoreEmptyValues.serialVersionUID",
    "snippet": "private static final long serialVersionUID\u003d-2816745041482698471L;",
    "begin_line": 50,
    "end_line": 50,
    "comment": ""
  },
  {
    "class_name": "ReturnsMoreEmptyValues",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/stubbing/defaultanswers/ReturnsMoreEmptyValues.java",
    "signature": "ReturnsMoreEmptyValues.delegate",
    "snippet": "private final Answer\u003cObject\u003e delegate\u003dnew ReturnsEmptyValues();",
    "begin_line": 51,
    "end_line": 51,
    "comment": ""
  },
  {
    "class_name": "ReturnsSmartNulls",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNulls.java",
    "signature": "ReturnsSmartNulls.serialVersionUID",
    "snippet": "private static final long serialVersionUID\u003d7618312406617949441L;",
    "begin_line": 38,
    "end_line": 38,
    "comment": ""
  },
  {
    "class_name": "ReturnsSmartNulls",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNulls.java",
    "signature": "ReturnsSmartNulls.delegate",
    "snippet": "private final Answer\u003cObject\u003e delegate\u003dnew ReturnsMoreEmptyValues();",
    "begin_line": 40,
    "end_line": 40,
    "comment": ""
  },
  {
    "class_name": "ThrowsSmartNullPointer",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNulls.java",
    "signature": "ThrowsSmartNullPointer.unstubbedInvocation",
    "snippet": "private final InvocationOnMock unstubbedInvocation;",
    "begin_line": 56,
    "end_line": 56,
    "comment": ""
  },
  {
    "class_name": "ThrowsSmartNullPointer",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNulls.java",
    "signature": "ThrowsSmartNullPointer.location",
    "snippet": "private final Location location;",
    "begin_line": 57,
    "end_line": 57,
    "comment": ""
  },
  {
    "class_name": "MockCreationValidator",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/util/MockCreationValidator.java",
    "signature": "MockCreationValidator.mockUtil",
    "snippet": "private final MockUtil mockUtil\u003dnew MockUtil();",
    "begin_line": 17,
    "end_line": 17,
    "comment": ""
  },
  {
    "class_name": "MockNameImpl",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/util/MockNameImpl.java",
    "signature": "MockNameImpl.serialVersionUID",
    "snippet": "private static final long serialVersionUID\u003d8014974700844306925L;",
    "begin_line": 13,
    "end_line": 13,
    "comment": ""
  },
  {
    "class_name": "MockNameImpl",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/util/MockNameImpl.java",
    "signature": "MockNameImpl.mockName",
    "snippet": "private final String mockName;",
    "begin_line": 14,
    "end_line": 14,
    "comment": ""
  },
  {
    "class_name": "MockNameImpl",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/util/MockNameImpl.java",
    "signature": "MockNameImpl.defaultName",
    "snippet": "private boolean defaultName;",
    "begin_line": 15,
    "end_line": 15,
    "comment": ""
  },
  {
    "class_name": "MockUtil",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/util/MockUtil.java",
    "signature": "MockUtil.mockMaker",
    "snippet": "private static final MockMaker mockMaker\u003dPlugins.getMockMaker();",
    "begin_line": 24,
    "end_line": 24,
    "comment": ""
  },
  {
    "class_name": "ObjectMethodsGuru",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/util/ObjectMethodsGuru.java",
    "signature": "ObjectMethodsGuru.serialVersionUID",
    "snippet": "private static final long serialVersionUID\u003d-1286718569065470494L;",
    "begin_line": 15,
    "end_line": 15,
    "comment": ""
  },
  {
    "class_name": "HashCodeAndEqualsSafeSet",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet.java",
    "signature": "HashCodeAndEqualsSafeSet.backingHashSet",
    "snippet": "private final HashSet\u003cHashCodeAndEqualsMockWrapper\u003e backingHashSet\u003dnew HashSet\u003cHashCodeAndEqualsMockWrapper\u003e();",
    "begin_line": 34,
    "end_line": 34,
    "comment": ""
  },
  {
    "class_name": "HashCodeAndEqualsSafeSet",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/util/collections/HashCodeAndEqualsSafeSet.java",
    "signature": "HashCodeAndEqualsSafeSet.iterator",
    "snippet": "private final Iterator\u003cHashCodeAndEqualsMockWrapper\u003e iterator\u003dbackingHashSet.iterator();",
    "begin_line": 38,
    "end_line": 38,
    "comment": ""
  },
  {
    "class_name": "AccessibilityChanger",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/util/reflection/AccessibilityChanger.java",
    "signature": "AccessibilityChanger.wasAccessible",
    "snippet": "private Boolean wasAccessible\u003dnull;",
    "begin_line": 11,
    "end_line": 11,
    "comment": ""
  },
  {
    "class_name": "FieldReader",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/util/reflection/FieldReader.java",
    "signature": "FieldReader.target",
    "snippet": "final Object target;",
    "begin_line": 13,
    "end_line": 13,
    "comment": ""
  },
  {
    "class_name": "FieldReader",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/util/reflection/FieldReader.java",
    "signature": "FieldReader.field",
    "snippet": "final Field field;",
    "begin_line": 14,
    "end_line": 14,
    "comment": ""
  },
  {
    "class_name": "FieldReader",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/util/reflection/FieldReader.java",
    "signature": "FieldReader.changer",
    "snippet": "final AccessibilityChanger changer\u003dnew AccessibilityChanger();",
    "begin_line": 15,
    "end_line": 15,
    "comment": ""
  },
  {
    "class_name": "DefaultRegisteredInvocations",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/verification/DefaultRegisteredInvocations.java",
    "signature": "DefaultRegisteredInvocations.serialVersionUID",
    "snippet": "private static final long serialVersionUID\u003d-2674402327380736290L;",
    "begin_line": 20,
    "end_line": 20,
    "comment": ""
  },
  {
    "class_name": "DefaultRegisteredInvocations",
    "src_path": "src/main/resources/Mockito-4/buggy/src/org/mockito/internal/verification/DefaultRegisteredInvocations.java",
    "signature": "DefaultRegisteredInvocations.invocations",
    "snippet": "private final LinkedList\u003cInvocation\u003e invocations\u003dnew LinkedList\u003cInvocation\u003e();",
    "begin_line": 21,
    "end_line": 21,
    "comment": ""
  }
]